SET NOCOUNT ON;

-- Create emfac schema
IF NOT EXISTS (SELECT schema_name FROM information_schema.schemata WHERE schema_name='emfac')
EXEC ('CREATE SCHEMA [emfac]')
GO


-- Add metadata for [emfac]
IF EXISTS(SELECT * FROM [db_meta].[data_dictionary] WHERE [ObjectType] = 'SCHEMA' AND [FullObjectName] = '[emfac]' AND [PropertyName] = 'MS_Description')
EXECUTE [db_meta].[drop_xp] 'emfac', 'MS_Description'

EXECUTE [db_meta].[add_xp] 'emfac', 'MS_Description', 'schema to hold all objects associated with EMFAC program'
GO


-- Drop table constraints if they exist so tables can be dropped and re-created
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[emfac].[fk_emfac_vehicle_map_emfac_vehicle_class]') AND parent_object_id = OBJECT_ID(N'[emfac].[emfac_vehicle_map]'))
ALTER TABLE [emfac].[emfac_vehicle_map] DROP CONSTRAINT [fk_emfac_vehicle_map_emfac_vehicle_class]
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[emfac].[fk_emfac_vehicle_map_sandag_vehicle_class]') AND parent_object_id = OBJECT_ID(N'[emfac].[emfac_vehicle_map]'))
ALTER TABLE [emfac].[emfac_vehicle_map] DROP CONSTRAINT [fk_emfac_vehicle_map_sandag_vehicle_class]
GO


-- Create emfac default speed vmt reference table
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[emfac].[emfac_default_speed_vmt]') AND type in (N'U'))
DROP TABLE [emfac].[emfac_default_speed_vmt]
GO

CREATE TABLE [emfac].[emfac_default_speed_vmt](
	[emfac_default_speed_vmt_id] [int] IDENTITY(1,1) NOT NULL,
	[emfac_vehicle_class_id] [int] NOT NULL,
	[year] [int] NOT NULL,
	[speed_bin] [int] NOT NULL,
	[vmt] [float] NOT NULL,
	CONSTRAINT [pk_emfac_default_speed_vmt] PRIMARY KEY CLUSTERED ([emfac_default_speed_vmt_id]),
	CONSTRAINT [ixuq_emfac_default_speed_vmt] UNIQUE ([emfac_vehicle_class_id],[year],[speed_bin]) WITH (DATA_COMPRESSION = PAGE)
	) 
ON 
	[ref_fg]
WITH 
	(DATA_COMPRESSION = PAGE);
	
INSERT INTO [emfac].[emfac_default_speed_vmt]
VALUES
	(34, 2012, 45, 0.0001),
	(34, 2015, 45, 0.0001),
	(34, 2020, 45, 0.0001),
	(34, 2025, 45, 0.0001),
	(34, 2030, 45, 0.0001),
	(34, 2035, 45, 0.0001),
	(34, 2040, 45, 0.0001),
	(34, 2050, 45, 0.0001),
	(45, 2012, 5, 387.189),
	(45, 2012, 10, 1357.08),
	(45, 2012, 15, 2714.15),
	(45, 2012, 20, 3684.02),
	(45, 2012, 25, 5815.48),
	(45, 2012, 30, 6977.04),
	(45, 2012, 35, 7161.06),
	(45, 2012, 40, 4834.09),
	(45, 2012, 45, 2319.28),
	(45, 2012, 50, 1161.57),
	(45, 2012, 55, 1728.92),
	(45, 2012, 60, 962.224),
	(45, 2012, 65, 0),
	(45, 2012, 70, 0),
	(45, 2012, 75, 0),
	(45, 2012, 80, 0),
	(45, 2015, 5, 386.009),
	(45, 2015, 10, 1352.94),
	(45, 2015, 15, 2705.88),
	(45, 2015, 20, 3672.79),
	(45, 2015, 25, 5797.75),
	(45, 2015, 30, 6955.78),
	(45, 2015, 35, 7139.23),
	(45, 2015, 40, 4819.36),
	(45, 2015, 45, 2312.21),
	(45, 2015, 50, 1158.03),
	(45, 2015, 55, 1723.65),
	(45, 2015, 60, 959.291),
	(45, 2015, 65, 0),
	(45, 2015, 70, 0),
	(45, 2015, 75, 0),
	(45, 2015, 80, 0),
	(45, 2020, 5, 380.116),
	(45, 2020, 10, 1332.29),
	(45, 2020, 15, 2664.58),
	(45, 2020, 20, 3616.73),
	(45, 2020, 25, 5709.25),
	(45, 2020, 30, 6849.6),
	(45, 2020, 35, 7030.25),
	(45, 2020, 40, 4745.79),
	(45, 2020, 45, 2276.92),
	(45, 2020, 50, 1140.35),
	(45, 2020, 55, 1697.34),
	(45, 2020, 60, 944.647),
	(45, 2020, 65, 0),
	(45, 2020, 70, 0),
	(45, 2020, 75, 0),
	(45, 2020, 80, 0),
	(45, 2025, 5, 359.335),
	(45, 2025, 10, 1259.45),
	(45, 2025, 15, 2518.9),
	(45, 2025, 20, 3419),
	(45, 2025, 25, 5397.11),
	(45, 2025, 30, 6475.12),
	(45, 2025, 35, 6645.89),
	(45, 2025, 40, 4486.33),
	(45, 2025, 45, 2152.43),
	(45, 2025, 50, 1078),
	(45, 2025, 55, 1604.54),
	(45, 2025, 60, 893.002),
	(45, 2025, 65, 0),
	(45, 2025, 70, 0),
	(45, 2025, 75, 0),
	(45, 2025, 80, 0),
	(45, 2030, 5, 342.202),
	(45, 2030, 10, 1199.4),
	(45, 2030, 15, 2398.8),
	(45, 2030, 20, 3255.98),
	(45, 2030, 25, 5139.79),
	(45, 2030, 30, 6166.39),
	(45, 2030, 35, 6329.02),
	(45, 2030, 40, 4272.43),
	(45, 2030, 45, 2049.81),
	(45, 2030, 50, 1026.61),
	(45, 2030, 55, 1528.04),
	(45, 2030, 60, 850.424),
	(45, 2030, 65, 0),
	(45, 2030, 70, 0),
	(45, 2030, 75, 0),
	(45, 2030, 80, 0),
	(45, 2035, 5, 320.045),
	(45, 2035, 10, 1121.74),
	(45, 2035, 15, 2243.48),
	(45, 2035, 20, 3045.16),
	(45, 2035, 25, 4807),
	(45, 2035, 30, 5767.13),
	(45, 2035, 35, 5919.23),
	(45, 2035, 40, 3995.8),
	(45, 2035, 45, 1917.09),
	(45, 2035, 50, 960.135),
	(45, 2035, 55, 1429.1),
	(45, 2035, 60, 795.361),
	(45, 2035, 65, 0),
	(45, 2035, 70, 0),
	(45, 2035, 75, 0),
	(45, 2035, 80, 0),
	(45, 2040, 5, 320.045),
	(45, 2040, 10, 1121.74),
	(45, 2040, 15, 2243.48),
	(45, 2040, 20, 3045.16),
	(45, 2040, 25, 4807),
	(45, 2040, 30, 5767.13),
	(45, 2040, 35, 5919.23),
	(45, 2040, 40, 3995.8),
	(45, 2040, 45, 1917.09),
	(45, 2040, 50, 960.135),
	(45, 2040, 55, 1429.1),
	(45, 2040, 60, 795.361),
	(45, 2040, 65, 0),
	(45, 2040, 70, 0),
	(45, 2040, 75, 0),
	(45, 2040, 80, 0),
	(45, 2050, 5, 320.045),
	(45, 2050, 10, 1121.74),
	(45, 2050, 15, 2243.48),
	(45, 2050, 20, 3045.16),
	(45, 2050, 25, 4807),
	(45, 2050, 30, 5767.13),
	(45, 2050, 35, 5919.23),
	(45, 2050, 40, 3995.8),
	(45, 2050, 45, 1917.09),
	(45, 2050, 50, 960.135),
	(45, 2050, 55, 1429.1),
	(45, 2050, 60, 795.361),
	(45, 2050, 65, 0),
	(45, 2050, 70, 0),
	(45, 2050, 75, 0),
	(45, 2050, 80, 0),
	(46, 2012, 5, 139.425),
	(46, 2012, 10, 488.679),
	(46, 2012, 15, 977.358),
	(46, 2012, 20, 1326.6),
	(46, 2012, 25, 2094.13),
	(46, 2012, 30, 2512.41),
	(46, 2012, 35, 2578.67),
	(46, 2012, 40, 1740.74),
	(46, 2012, 45, 835.166),
	(46, 2012, 50, 418.276),
	(46, 2012, 55, 622.578),
	(46, 2012, 60, 346.494),
	(46, 2012, 65, 0),
	(46, 2012, 70, 0),
	(46, 2012, 75, 0),
	(46, 2012, 80, 0),
	(46, 2015, 5, 141.864),
	(46, 2015, 10, 497.226),
	(46, 2015, 15, 994.451),
	(46, 2015, 20, 1349.81),
	(46, 2015, 25, 2130.76),
	(46, 2015, 30, 2556.35),
	(46, 2015, 35, 2623.77),
	(46, 2015, 40, 1771.19),
	(46, 2015, 45, 849.772),
	(46, 2015, 50, 425.592),
	(46, 2015, 55, 633.466),
	(46, 2015, 60, 352.554),
	(46, 2015, 65, 0),
	(46, 2015, 70, 0),
	(46, 2015, 75, 0),
	(46, 2015, 80, 0),
	(46, 2020, 5, 146.683),
	(46, 2020, 10, 514.117),
	(46, 2020, 15, 1028.23),
	(46, 2020, 20, 1395.66),
	(46, 2020, 25, 2203.14),
	(46, 2020, 30, 2643.19),
	(46, 2020, 35, 2712.91),
	(46, 2020, 40, 1831.35),
	(46, 2020, 45, 878.64),
	(46, 2020, 50, 440.05),
	(46, 2020, 55, 654.986),
	(46, 2020, 60, 364.53),
	(46, 2020, 65, 0),
	(46, 2020, 70, 0),
	(46, 2020, 75, 0),
	(46, 2020, 80, 0),
	(46, 2025, 5, 154.199),
	(46, 2025, 10, 540.46),
	(46, 2025, 15, 1080.92),
	(46, 2025, 20, 1467.17),
	(46, 2025, 25, 2316.03),
	(46, 2025, 30, 2778.63),
	(46, 2025, 35, 2851.91),
	(46, 2025, 40, 1925.19),
	(46, 2025, 45, 923.66),
	(46, 2025, 50, 462.597),
	(46, 2025, 55, 688.546),
	(46, 2025, 60, 383.208),
	(46, 2025, 65, 0),
	(46, 2025, 70, 0),
	(46, 2025, 75, 0),
	(46, 2025, 80, 0),
	(46, 2030, 5, 161.912),
	(46, 2030, 10, 567.494),
	(46, 2030, 15, 1134.99),
	(46, 2030, 20, 1540.56),
	(46, 2030, 25, 2431.88),
	(46, 2030, 30, 2917.62),
	(46, 2030, 35, 2994.57),
	(46, 2030, 40, 2021.49),
	(46, 2030, 45, 969.863),
	(46, 2030, 50, 485.737),
	(46, 2030, 55, 722.989),
	(46, 2030, 60, 402.377),
	(46, 2030, 65, 0),
	(46, 2030, 70, 0),
	(46, 2030, 75, 0),
	(46, 2030, 80, 0),
	(46, 2035, 5, 169.306),
	(46, 2035, 10, 593.407),
	(46, 2035, 15, 1186.81),
	(46, 2035, 20, 1610.91),
	(46, 2035, 25, 2542.93),
	(46, 2035, 30, 3050.84),
	(46, 2035, 35, 3131.31),
	(46, 2035, 40, 2113.8),
	(46, 2035, 45, 1014.15),
	(46, 2035, 50, 507.917),
	(46, 2035, 55, 756.001),
	(46, 2035, 60, 420.75),
	(46, 2035, 65, 0),
	(46, 2035, 70, 0),
	(46, 2035, 75, 0),
	(46, 2035, 80, 0),
	(46, 2040, 5, 169.306),
	(46, 2040, 10, 593.407),
	(46, 2040, 15, 1186.81),
	(46, 2040, 20, 1610.91),
	(46, 2040, 25, 2542.93),
	(46, 2040, 30, 3050.84),
	(46, 2040, 35, 3131.31),
	(46, 2040, 40, 2113.8),
	(46, 2040, 45, 1014.15),
	(46, 2040, 50, 507.917),
	(46, 2040, 55, 756.001),
	(46, 2040, 60, 420.75),
	(46, 2040, 65, 0),
	(46, 2040, 70, 0),
	(46, 2040, 75, 0),
	(46, 2040, 80, 0),
	(46, 2050, 5, 169.306),
	(46, 2050, 10, 593.407),
	(46, 2050, 15, 1186.81),
	(46, 2050, 20, 1610.91),
	(46, 2050, 25, 2542.93),
	(46, 2050, 30, 3050.84),
	(46, 2050, 35, 3131.31),
	(46, 2050, 40, 2113.8),
	(46, 2050, 45, 1014.15),
	(46, 2050, 50, 507.917),
	(46, 2050, 55, 756.001),
	(46, 2050, 60, 420.75),
	(46, 2050, 65, 0),
	(46, 2050, 70, 0),
	(46, 2050, 75, 0),
	(46, 2050, 80, 0),
	(49, 2012, 5, 151.802),
	(49, 2012, 10, 579.89),
	(49, 2012, 15, 709.21),
	(49, 2012, 20, 1552.84),
	(49, 2012, 25, 1601.86),
	(49, 2012, 30, 2704.39),
	(49, 2012, 35, 4865.26),
	(49, 2012, 40, 4591.39),
	(49, 2012, 45, 6428.25),
	(49, 2012, 50, 6685.22),
	(49, 2012, 55, 8152.22),
	(49, 2012, 60, 2483.45),
	(49, 2012, 65, 1360.24),
	(49, 2012, 70, 0),
	(49, 2015, 5, 168.056),
	(49, 2015, 10, 641.98),
	(49, 2015, 15, 785.147),
	(49, 2015, 20, 1719.1),
	(49, 2015, 25, 1773.38),
	(49, 2015, 30, 2993.96),
	(49, 2015, 35, 5386.2),
	(49, 2015, 40, 5083.01),
	(49, 2015, 45, 7116.54),
	(49, 2015, 50, 7401.03),
	(49, 2015, 55, 9025.1),
	(49, 2015, 60, 2749.36),
	(49, 2015, 65, 1505.88),
	(49, 2015, 70, 0),
	(49, 2020, 5, 188.566),
	(49, 2020, 10, 720.332),
	(49, 2020, 15, 880.972),
	(49, 2020, 20, 1928.91),
	(49, 2020, 25, 1989.81),
	(49, 2020, 30, 3359.36),
	(49, 2020, 35, 6043.57),
	(49, 2020, 40, 5703.38),
	(49, 2020, 45, 7985.1),
	(49, 2020, 50, 8304.3),
	(49, 2020, 55, 10126.6),
	(49, 2020, 60, 3084.91),
	(49, 2020, 65, 1689.67),
	(49, 2020, 70, 0),
	(49, 2025, 5, 205.654),
	(49, 2025, 10, 785.606),
	(49, 2025, 15, 960.803),
	(49, 2025, 20, 2103.71),
	(49, 2025, 25, 2170.12),
	(49, 2025, 30, 3663.77),
	(49, 2025, 35, 6591.22),
	(49, 2025, 40, 6220.2),
	(49, 2025, 45, 8708.68),
	(49, 2025, 50, 9056.81),
	(49, 2025, 55, 11044.2),
	(49, 2025, 60, 3364.46),
	(49, 2025, 65, 1842.78),
	(49, 2025, 70, 0),
	(49, 2030, 5, 224.289),
	(49, 2030, 10, 856.795),
	(49, 2030, 15, 1047.87),
	(49, 2030, 20, 2294.34),
	(49, 2030, 25, 2366.77),
	(49, 2030, 30, 3995.77),
	(49, 2030, 35, 7188.49),
	(49, 2030, 40, 6783.85),
	(49, 2030, 45, 9497.83),
	(49, 2030, 50, 9877.51),
	(49, 2030, 55, 12045),
	(49, 2030, 60, 3669.33),
	(49, 2030, 65, 2009.77),
	(49, 2030, 70, 0),
	(49, 2035, 5, 244.614),
	(49, 2035, 10, 934.435),
	(49, 2035, 15, 1142.82),
	(49, 2035, 20, 2502.24),
	(49, 2035, 25, 2581.24),
	(49, 2035, 30, 4357.85),
	(49, 2035, 35, 7839.89),
	(49, 2035, 40, 7398.58),
	(49, 2035, 45, 10358.5),
	(49, 2035, 50, 10772.6),
	(49, 2035, 55, 13136.5),
	(49, 2035, 60, 4001.84),
	(49, 2035, 65, 2191.89),
	(49, 2035, 70, 0),
	(49, 2040, 5, 244.614),
	(49, 2040, 10, 934.435),
	(49, 2040, 15, 1142.82),
	(49, 2040, 20, 2502.24),
	(49, 2040, 25, 2581.24),
	(49, 2040, 30, 4357.85),
	(49, 2040, 35, 7839.89),
	(49, 2040, 40, 7398.58),
	(49, 2040, 45, 10358.5),
	(49, 2040, 50, 10772.6),
	(49, 2040, 55, 13136.5),
	(49, 2040, 60, 4001.84),
	(49, 2040, 65, 2191.89),
	(49, 2040, 70, 0),
	(49, 2050, 5, 244.614),
	(49, 2050, 10, 934.435),
	(49, 2050, 15, 1142.82),
	(49, 2050, 20, 2502.24),
	(49, 2050, 25, 2581.24),
	(49, 2050, 30, 4357.85),
	(49, 2050, 35, 7839.89),
	(49, 2050, 40, 7398.58),
	(49, 2050, 45, 10358.5),
	(49, 2050, 50, 10772.6),
	(49, 2050, 55, 13136.5),
	(49, 2050, 60, 4001.84),
	(49, 2050, 65, 2191.89),
	(49, 2050, 70, 0),
	(50, 2012, 5, 593.976),
	(50, 2012, 10, 2985.92),
	(50, 2012, 15, 3771.73),
	(50, 2012, 20, 3912.21),
	(50, 2012, 25, 4359.11),
	(50, 2012, 30, 4928.6),
	(50, 2012, 35, 6125.5),
	(50, 2012, 40, 7625.61),
	(50, 2012, 45, 6954.04),
	(50, 2012, 50, 6767.71),
	(50, 2012, 55, 8851.54),
	(50, 2012, 60, 10214.3),
	(50, 2012, 65, 1596.11),
	(50, 2012, 70, 0),
	(50, 2015, 5, 581.584),
	(50, 2015, 10, 2923.63),
	(50, 2015, 15, 3693.04),
	(50, 2015, 20, 3830.59),
	(50, 2015, 25, 4268.17),
	(50, 2015, 30, 4825.77),
	(50, 2015, 35, 5997.7),
	(50, 2015, 40, 7466.52),
	(50, 2015, 45, 6808.95),
	(50, 2015, 50, 6626.51),
	(50, 2015, 55, 8666.87),
	(50, 2015, 60, 10001.2),
	(50, 2015, 65, 1562.81),
	(50, 2015, 70, 0),
	(50, 2020, 5, 581.195),
	(50, 2020, 10, 2921.67),
	(50, 2020, 15, 3690.58),
	(50, 2020, 20, 3828.03),
	(50, 2020, 25, 4265.31),
	(50, 2020, 30, 4822.55),
	(50, 2020, 35, 5993.69),
	(50, 2020, 40, 7461.53),
	(50, 2020, 45, 6804.4),
	(50, 2020, 50, 6622.08),
	(50, 2020, 55, 8661.08),
	(50, 2020, 60, 9994.5),
	(50, 2020, 65, 1561.77),
	(50, 2020, 70, 0),
	(50, 2025, 5, 617.446),
	(50, 2025, 10, 3103.91),
	(50, 2025, 15, 3920.77),
	(50, 2025, 20, 4066.8),
	(50, 2025, 25, 4531.35),
	(50, 2025, 30, 5123.34),
	(50, 2025, 35, 6367.53),
	(50, 2025, 40, 7926.92),
	(50, 2025, 45, 7228.81),
	(50, 2025, 50, 7035.12),
	(50, 2025, 55, 9201.3),
	(50, 2025, 60, 10617.9),
	(50, 2025, 65, 1659.18),
	(50, 2025, 70, 0),
	(50, 2030, 5, 662.328),
	(50, 2030, 10, 3329.53),
	(50, 2030, 15, 4205.77),
	(50, 2030, 20, 4362.41),
	(50, 2030, 25, 4860.74),
	(50, 2030, 30, 5495.75),
	(50, 2030, 35, 6830.39),
	(50, 2030, 40, 8503.13),
	(50, 2030, 45, 7754.27),
	(50, 2030, 50, 7546.5),
	(50, 2030, 55, 9870.14),
	(50, 2030, 60, 11389.7),
	(50, 2030, 65, 1779.78),
	(50, 2030, 70, 0),
	(50, 2035, 5, 703.67),
	(50, 2035, 10, 3537.36),
	(50, 2035, 15, 4468.29),
	(50, 2035, 20, 4634.71),
	(50, 2035, 25, 5164.14),
	(50, 2035, 30, 5838.8),
	(50, 2035, 35, 7256.74),
	(50, 2035, 40, 9033.89),
	(50, 2035, 45, 8238.29),
	(50, 2035, 50, 8017.55),
	(50, 2035, 55, 10486.2),
	(50, 2035, 60, 12100.6),
	(50, 2035, 65, 1890.88),
	(50, 2035, 70, 0),
	(50, 2040, 5, 703.67),
	(50, 2040, 10, 3537.36),
	(50, 2040, 15, 4468.29),
	(50, 2040, 20, 4634.71),
	(50, 2040, 25, 5164.14),
	(50, 2040, 30, 5838.8),
	(50, 2040, 35, 7256.74),
	(50, 2040, 40, 9033.89),
	(50, 2040, 45, 8238.29),
	(50, 2040, 50, 8017.55),
	(50, 2040, 55, 10486.2),
	(50, 2040, 60, 12100.6),
	(50, 2040, 65, 1890.88),
	(50, 2040, 70, 0),
	(50, 2050, 5, 703.67),
	(50, 2050, 10, 3537.36),
	(50, 2050, 15, 4468.29),
	(50, 2050, 20, 4634.71),
	(50, 2050, 25, 5164.14),
	(50, 2050, 30, 5838.8),
	(50, 2050, 35, 7256.74),
	(50, 2050, 40, 9033.89),
	(50, 2050, 45, 8238.29),
	(50, 2050, 50, 8017.55),
	(50, 2050, 55, 10486.2),
	(50, 2050, 60, 12100.6),
	(50, 2050, 65, 1890.88),
	(50, 2050, 70, 0),
	(51, 2012, 5, 334.23),
	(51, 2012, 10, 1663.67),
	(51, 2012, 15, 2245.38),
	(51, 2012, 20, 2381.31),
	(51, 2012, 25, 2480.04),
	(51, 2012, 30, 2982.04),
	(51, 2012, 35, 3516.22),
	(51, 2012, 40, 4364.84),
	(51, 2012, 45, 3574.22),
	(51, 2012, 50, 4000.14),
	(51, 2012, 55, 5861.84),
	(51, 2012, 60, 7043.98),
	(51, 2012, 65, 1108.52),
	(51, 2012, 70, 0),
	(51, 2015, 5, 365.543),
	(51, 2015, 10, 1819.54),
	(51, 2015, 15, 2455.74),
	(51, 2015, 20, 2604.4),
	(51, 2015, 25, 2712.38),
	(51, 2015, 30, 3261.42),
	(51, 2015, 35, 3845.64),
	(51, 2015, 40, 4773.77),
	(51, 2015, 45, 3909.08),
	(51, 2015, 50, 4374.9),
	(51, 2015, 55, 6411.02),
	(51, 2015, 60, 7703.91),
	(51, 2015, 65, 1212.38),
	(51, 2015, 70, 0),
	(51, 2020, 5, 408.644),
	(51, 2020, 10, 2034.08),
	(51, 2020, 15, 2745.3),
	(51, 2020, 20, 2911.49),
	(51, 2020, 25, 3032.2),
	(51, 2020, 30, 3645.97),
	(51, 2020, 35, 4299.08),
	(51, 2020, 40, 5336.64),
	(51, 2020, 45, 4370),
	(51, 2020, 50, 4890.74),
	(51, 2020, 55, 7166.94),
	(51, 2020, 60, 8612.28),
	(51, 2020, 65, 1355.33),
	(51, 2020, 70, 0),
	(51, 2025, 5, 445.674),
	(51, 2025, 10, 2218.4),
	(51, 2025, 15, 2994.07),
	(51, 2025, 20, 3175.32),
	(51, 2025, 25, 3306.97),
	(51, 2025, 30, 3976.36),
	(51, 2025, 35, 4688.65),
	(51, 2025, 40, 5820.23),
	(51, 2025, 45, 4766),
	(51, 2025, 50, 5333.93),
	(51, 2025, 55, 7816.39),
	(51, 2025, 60, 9392.7),
	(51, 2025, 65, 1478.14),
	(51, 2025, 70, 0),
	(51, 2030, 5, 486.06),
	(51, 2030, 10, 2419.42),
	(51, 2030, 15, 3265.38),
	(51, 2030, 20, 3463.05),
	(51, 2030, 25, 3606.63),
	(51, 2030, 30, 4336.68),
	(51, 2030, 35, 5113.52),
	(51, 2030, 40, 6347.64),
	(51, 2030, 45, 5197.88),
	(51, 2030, 50, 5817.27),
	(51, 2030, 55, 8524.68),
	(51, 2030, 60, 10243.8),
	(51, 2030, 65, 1612.09),
	(51, 2030, 70, 0),
	(51, 2035, 5, 530.105),
	(51, 2035, 10, 2638.66),
	(51, 2035, 15, 3561.28),
	(51, 2035, 20, 3776.86),
	(51, 2035, 25, 3933.45),
	(51, 2035, 30, 4729.66),
	(51, 2035, 35, 5576.89),
	(51, 2035, 40, 6922.84),
	(51, 2035, 45, 5668.89),
	(51, 2035, 50, 6344.41),
	(51, 2035, 55, 9297.16),
	(51, 2035, 60, 11172.1),
	(51, 2035, 65, 1758.17),
	(51, 2035, 70, 0),
	(51, 2040, 5, 530.105),
	(51, 2040, 10, 2638.66),
	(51, 2040, 15, 3561.28),
	(51, 2040, 20, 3776.86),
	(51, 2040, 25, 3933.45),
	(51, 2040, 30, 4729.66),
	(51, 2040, 35, 5576.89),
	(51, 2040, 40, 6922.84),
	(51, 2040, 45, 5668.89),
	(51, 2040, 50, 6344.41),
	(51, 2040, 55, 9297.16),
	(51, 2040, 60, 11172.1),
	(51, 2040, 65, 1758.17),
	(51, 2040, 70, 0),
	(51, 2050, 5, 530.105),
	(51, 2050, 10, 2638.66),
	(51, 2050, 15, 3561.28),
	(51, 2050, 20, 3776.86),
	(51, 2050, 25, 3933.45),
	(51, 2050, 30, 4729.66),
	(51, 2050, 35, 5576.89),
	(51, 2050, 40, 6922.84),
	(51, 2050, 45, 5668.89),
	(51, 2050, 50, 6344.41),
	(51, 2050, 55, 9297.16),
	(51, 2050, 60, 11172.1),
	(51, 2050, 65, 1758.17),
	(51, 2050, 70, 0);
GO


-- Add metadata for [emfac].[emfac_default_speed_vmt]
EXECUTE [db_meta].[add_xp] 'emfac.emfac_default_speed_vmt', 'SUBSYSTEM', 'emfac'
EXECUTE [db_meta].[add_xp] 'emfac.emfac_default_speed_vmt', 'MS_Description', ''
GO


-- Create emfac vehicle class reference table
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[emfac].[emfac_vehicle_class]') AND type in (N'U'))
DROP TABLE [emfac].[emfac_vehicle_class]
GO

CREATE TABLE [emfac].[emfac_vehicle_class](
	[emfac_vehicle_class_id] tinyint NOT NULL,
	[emfac_vehicle_class] [varchar](40) NOT NULL,
	[major_version] [varchar](4) NOT NULL,
	[minor_version] [varchar](50) NOT NULL,
	CONSTRAINT [pk_emfac_vehicle_class] PRIMARY KEY CLUSTERED ([emfac_vehicle_class_id])
	) 
ON 
	[ref_fg]
WITH 
	(DATA_COMPRESSION = PAGE);
	
INSERT INTO [emfac].[emfac_vehicle_class]
VALUES
	(1,'LDA - DSL','2013','1.1'),
	(2,'LDA - GAS','2013','1.1'),
	(3,'LDT1 - DSL','2013','1.1'),
	(4,'LDT1 - GAS','2013','1.1'),
	(5,'LDT2 - DSL','2013','1.1'),
	(6,'LDT2 - GAS','2013','1.1'),
	(7,'LHD1 - DSL','2013','1.1'),
	(8,'LHD1 - GAS','2013','1.1'),
	(9,'LHD2 - DSL','2013','1.1'),
	(10,'LHD2 - GAS','2013','1.1'),
	(11,'MCY - GAS','2013','1.1'),
	(12,'MDV - DSL','2013','1.1'),
	(13,'MDV - GAS','2013','1.1'),
	(14,'MH - DSL','2013','1.1'),
	(15,'MH - GAS','2013','1.1'),
	(16,'T6 Ag - DSL','2013','1.1'),
	(17,'T6 CAIRP heavy - DSL','2013','1.1'),
	(18,'T6 CAIRP small - DSL','2013','1.1'),
	(19,'T6 instate construction heavy - DSL','2013','1.1'),
	(20,'T6 instate construction small - DSL','2013','1.1'),
	(21,'T6 instate heavy - DSL','2013','1.1'),
	(22,'T6 instate small - DSL','2013','1.1'),
	(23,'T6 OOS heavy - DSL','2013','1.1'),
	(24,'T6 OOS small - DSL','2013','1.1'),
	(25,'T6 public - DSL','2013','1.1'),
	(26,'T6 utility - DSL','2013','1.1'),
	(27,'T6TS - GAS','2013','1.1'),
	(28,'T7 Ag - DSL','2013','1.1'),
	(29,'T7 CAIRP - DSL','2013','1.1'),
	(30,'T7 CAIRP construction - DSL','2013','1.1'),
	(31,'T7 NNOOS - DSL','2013','1.1'),
	(32,'T7 NOOS - DSL','2013','1.1'),
	(33,'T7 other port - DSL','2013','1.1'),
	(34,'T7 POAK - DSL','2013','1.1'),
	(35,'T7 POLA - DSL','2013','1.1'),
	(36,'T7 public - DSL','2013','1.1'),
	(37,'T7 Single - DSL','2013','1.1'),
	(38,'T7 single construction - DSL','2013','1.1'),
	(39,'T7 SWCV - DSL','2013','1.1'),
	(40,'T7 tractor - DSL','2013','1.1'),
	(41,'T7 tractor construction - DSL','2013','1.1'),
	(42,'T7 utility - DSL','2013','1.1'),
	(43,'T7IS - GAS','2013','1.1'),
	(44,'PTO - DSL','2013','1.1'),
	(45,'SBUS - DSL','2013','1.1'),
	(46,'SBUS - GAS','2013','1.1'),
	(47,'UBUS - DSL','2013','1.1'),
	(48,'UBUS - GAS','2013','1.1'),
	(49,'Motor Coach - DSL','2013','1.1'),
	(50,'OBUS - GAS','2013','1.1'),
	(51,'All Other Buses - DSL','2013','1.1');
GO


-- Add metadata for [emfac].[emfac_vehicle_class]
EXECUTE [db_meta].[add_xp] 'emfac.emfac_vehicle_class', 'SUBSYSTEM', 'emfac'
EXECUTE [db_meta].[add_xp] 'emfac.emfac_vehicle_class', 'MS_Description', ''
GO


-- Create sandag vehicle class reference table
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[emfac].[sandag_vehicle_class]') AND type in (N'U'))
DROP TABLE [emfac].[sandag_vehicle_class]
GO

CREATE TABLE [emfac].[sandag_vehicle_class](
	[sandag_vehicle_class_id] tinyint NOT NULL,
	[sandag_vehicle_class] [varchar](10) NOT NULL,
	[major_model_version] [int] NOT NULL,
	CONSTRAINT [pk_sandag_vehicle_class] PRIMARY KEY CLUSTERED ([sandag_vehicle_class_id])
	) 
ON 
	[ref_fg]
WITH 
	(DATA_COMPRESSION = PAGE);
	
INSERT INTO [emfac].[sandag_vehicle_class]
VALUES
	(1,'SOV_GP',13),
	(2,'SOV_PAY',13),
	(3,'SR2_GP',13),
	(4,'SR2_HOV',13),
	(5,'SR2_PAY',13),
	(6,'SR3_GP',13),
	(7,'SR3_HOV',13),
	(8,'SR3_PAY',13),
	(9,'LHDN',13),
	(10,'LHDT',13),
	(11,'MHDN',13),
	(12,'MHDT',13),
	(13,'HHDN',13),
	(14,'HHDT',13),
	(15,'UBUS',13);
GO


-- Add metadata for [emfac].[sandag_vehicle_class]
EXECUTE [db_meta].[add_xp] 'emfac.sandag_vehicle_class', 'SUBSYSTEM', 'emfac'
EXECUTE [db_meta].[add_xp] 'emfac.sandag_vehicle_class', 'MS_Description', ''
GO


-- Create sandag vehicle class reference table
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[emfac].[emfac_vehicle_map]') AND type in (N'U'))
DROP TABLE [emfac].[emfac_vehicle_map]
GO

CREATE TABLE [emfac].[emfac_vehicle_map](
	[emfac_vehicle_map_id] int IDENTITY(1,1) NOT NULL,
	[sandag_vehicle_class_id] tinyint NOT NULL,
	[emfac_vehicle_class_id] tinyint NOT NULL,
	[year] [int] NOT NULL,
	[value] [float] NOT NULL,
	CONSTRAINT [pk_emfac_vehicle_map] PRIMARY KEY ([emfac_vehicle_map_id]),	
	CONSTRAINT [ixuq_emfac_vehicle_map] UNIQUE ([sandag_vehicle_class_id],[emfac_vehicle_class_id],[year]) WITH (DATA_COMPRESSION = PAGE),
	CONSTRAINT [fk_emfac_vehicle_map_emfac_vehicle_class] FOREIGN KEY ([emfac_vehicle_class_id]) REFERENCES [emfac].[emfac_vehicle_class] ([emfac_vehicle_class_id]),
	CONSTRAINT [fk_emfac_vehicle_map_sandag_vehicle_class] FOREIGN KEY ([sandag_vehicle_class_id]) REFERENCES [emfac].[sandag_vehicle_class] ([sandag_vehicle_class_id])
	) 
ON 
	[ref_fg]
WITH 
	(DATA_COMPRESSION = PAGE);

INSERT INTO [emfac].[emfac_vehicle_map]
VALUES
	(1, 1, 2010, 0.00211004),
	(1, 1, 2012, 0.00230684),
	(1, 1, 2015, 0.0024243),
	(1, 1, 2020, 0.00244032),
	(1, 1, 2025, 0.00239007),
	(1, 1, 2030, 0.00238549),
	(1, 1, 2035, 0.00236398),
	(1, 1, 2040, 0.00236398),
	(1, 1, 2050, 0.00236398),
	(1, 2, 2010, 0.542434),
	(1, 2, 2012, 0.54835),
	(1, 2, 2015, 0.551631),
	(1, 2, 2020, 0.556235),
	(1, 2, 2025, 0.555415),
	(1, 2, 2030, 0.555917),
	(1, 2, 2035, 0.55612),
	(1, 2, 2040, 0.55612),
	(1, 2, 2050, 0.55612),
	(1, 3, 2010, 6.95603e-005),
	(1, 3, 2012, 7.95454e-005),
	(1, 3, 2015, 9.00184e-005),
	(1, 3, 2020, 9.80674e-005),
	(1, 3, 2025, 9.76304e-005),
	(1, 3, 2030, 0.000105589),
	(1, 3, 2035, 0.00010072),
	(1, 3, 2040, 0.00010072),
	(1, 3, 2050, 0.00010072),
	(1, 4, 2010, 0.0788466),
	(1, 4, 2012, 0.0796401),
	(1, 4, 2015, 0.0799503),
	(1, 4, 2020, 0.0799523),
	(1, 4, 2025, 0.0798751),
	(1, 4, 2030, 0.0803679),
	(1, 4, 2035, 0.0811729),
	(1, 4, 2040, 0.0811729),
	(1, 4, 2050, 0.0811729),
	(1, 5, 2010, 7.19956e-005),
	(1, 5, 2012, 7.69567e-005),
	(1, 5, 2015, 8.99514e-005),
	(1, 5, 2020, 9.01715e-005),
	(1, 5, 2025, 8.59516e-005),
	(1, 5, 2030, 8.79031e-005),
	(1, 5, 2035, 8.63315e-005),
	(1, 5, 2040, 8.63315e-005),
	(1, 5, 2050, 8.63315e-005),
	(1, 6, 2010, 0.210601),
	(1, 6, 2012, 0.208836),
	(1, 6, 2015, 0.209126),
	(1, 6, 2020, 0.207894),
	(1, 6, 2025, 0.208652),
	(1, 6, 2030, 0.208593),
	(1, 6, 2035, 0.208182),
	(1, 6, 2040, 0.208182),
	(1, 6, 2050, 0.208182),
	(1, 11, 2010, 0.00698254),
	(1, 11, 2012, 0.00706658),
	(1, 11, 2015, 0.00711164),
	(1, 11, 2020, 0.00714431),
	(1, 11, 2025, 0.00709421),
	(1, 11, 2030, 0.00709589),
	(1, 11, 2035, 0.00705518),
	(1, 11, 2040, 0.00705518),
	(1, 11, 2050, 0.00705518),
	(1, 12, 2010, 0.000164803),
	(1, 12, 2012, 0.000161566),
	(1, 12, 2015, 0.000161001),
	(1, 12, 2020, 0.000157067),
	(1, 12, 2025, 0.000159977),
	(1, 12, 2030, 0.000159273),
	(1, 12, 2035, 0.000156492),
	(1, 12, 2040, 0.000156492),
	(1, 12, 2050, 0.000156492),
	(1, 13, 2010, 0.155003),
	(1, 13, 2012, 0.149732),
	(1, 13, 2015, 0.145642),
	(1, 13, 2020, 0.142238),
	(1, 13, 2025, 0.142492),
	(1, 13, 2030, 0.14157),
	(1, 13, 2035, 0.141064),
	(1, 13, 2040, 0.141064),
	(1, 13, 2050, 0.141064),
	(1, 14, 2010, 0.000553922),
	(1, 14, 2012, 0.000539207),
	(1, 14, 2015, 0.000526955),
	(1, 14, 2020, 0.000512625),
	(1, 14, 2025, 0.000510817),
	(1, 14, 2030, 0.000514107),
	(1, 14, 2035, 0.000513264),
	(1, 14, 2040, 0.000513264),
	(1, 14, 2050, 0.000513264),
	(1, 15, 2010, 0.0031635),
	(1, 15, 2012, 0.00321134),
	(1, 15, 2015, 0.00324684),
	(1, 15, 2020, 0.00323839),
	(1, 15, 2025, 0.0032281),
	(1, 15, 2030, 0.00320396),
	(1, 15, 2035, 0.00318466),
	(1, 15, 2040, 0.00318466),
	(1, 15, 2050, 0.00318466),
	(2, 1, 2010, 0.00211004),
	(2, 1, 2012, 0.00230684),
	(2, 1, 2015, 0.0024243),
	(2, 1, 2020, 0.00244032),
	(2, 1, 2025, 0.00239007),
	(2, 1, 2030, 0.00238549),
	(2, 1, 2035, 0.00236398),
	(2, 1, 2040, 0.00236398),
	(2, 1, 2050, 0.00236398),
	(2, 2, 2010, 0.542434),
	(2, 2, 2012, 0.54835),
	(2, 2, 2015, 0.551631),
	(2, 2, 2020, 0.556235),
	(2, 2, 2025, 0.555415),
	(2, 2, 2030, 0.555917),
	(2, 2, 2035, 0.55612),
	(2, 2, 2040, 0.55612),
	(2, 2, 2050, 0.55612),
	(2, 3, 2010, 6.95603e-005),
	(2, 3, 2012, 7.95454e-005),
	(2, 3, 2015, 9e-005),
	(2, 3, 2020, 9.80674e-005),
	(2, 3, 2025, 9.76e-005),
	(2, 3, 2030, 0.000106),
	(2, 3, 2035, 0.00010072),
	(2, 3, 2040, 0.00010072),
	(2, 3, 2050, 0.00010072),
	(2, 4, 2010, 0.0788466),
	(2, 4, 2012, 0.0796401),
	(2, 4, 2015, 0.0799503),
	(2, 4, 2020, 0.0799523),
	(2, 4, 2025, 0.0798751),
	(2, 4, 2030, 0.0803679),
	(2, 4, 2035, 0.0811729),
	(2, 4, 2040, 0.0811729),
	(2, 4, 2050, 0.0811729),
	(2, 5, 2010, 7.19956e-005),
	(2, 5, 2012, 7.69567e-005),
	(2, 5, 2015, 9e-005),
	(2, 5, 2020, 9.01715e-005),
	(2, 5, 2025, 8.6e-005),
	(2, 5, 2030, 8.79e-005),
	(2, 5, 2035, 8.63315e-005),
	(2, 5, 2040, 8.63315e-005),
	(2, 5, 2050, 8.63315e-005),
	(2, 6, 2010, 0.210601),
	(2, 6, 2012, 0.208836),
	(2, 6, 2015, 0.209126),
	(2, 6, 2020, 0.207894),
	(2, 6, 2025, 0.208652),
	(2, 6, 2030, 0.208593),
	(2, 6, 2035, 0.208182),
	(2, 6, 2040, 0.208182),
	(2, 6, 2050, 0.208182),
	(2, 11, 2010, 0.00698254),
	(2, 11, 2012, 0.00706658),
	(2, 11, 2015, 0.00711164),
	(2, 11, 2020, 0.00714431),
	(2, 11, 2025, 0.00709421),
	(2, 11, 2030, 0.00709589),
	(2, 11, 2035, 0.00705518),
	(2, 11, 2040, 0.00705518),
	(2, 11, 2050, 0.00705518),
	(2, 12, 2010, 0.000164803),
	(2, 12, 2012, 0.000161566),
	(2, 12, 2015, 0.000161001),
	(2, 12, 2020, 0.000157067),
	(2, 12, 2025, 0.000159977),
	(2, 12, 2030, 0.000159273),
	(2, 12, 2035, 0.000156492),
	(2, 12, 2040, 0.000156492),
	(2, 12, 2050, 0.000156492),
	(2, 13, 2010, 0.155003),
	(2, 13, 2012, 0.149732),
	(2, 13, 2015, 0.145642),
	(2, 13, 2020, 0.142238),
	(2, 13, 2025, 0.142492),
	(2, 13, 2030, 0.14157),
	(2, 13, 2035, 0.141064),
	(2, 13, 2040, 0.141064),
	(2, 13, 2050, 0.141064),
	(2, 14, 2010, 0.000553922),
	(2, 14, 2012, 0.000539207),
	(2, 14, 2015, 0.000526955),
	(2, 14, 2020, 0.000512625),
	(2, 14, 2025, 0.000510817),
	(2, 14, 2030, 0.000514107),
	(2, 14, 2035, 0.000513264),
	(2, 14, 2040, 0.000513264),
	(2, 14, 2050, 0.000513264),
	(2, 15, 2010, 0.0031635),
	(2, 15, 2012, 0.00321134),
	(2, 15, 2015, 0.00324684),
	(2, 15, 2020, 0.00323839),
	(2, 15, 2025, 0.0032281),
	(2, 15, 2030, 0.00320396),
	(2, 15, 2035, 0.00318466),
	(2, 15, 2040, 0.00318466),
	(2, 15, 2050, 0.00318466),
	(3, 1, 2010, 0.00211004),
	(3, 1, 2012, 0.00230684),
	(3, 1, 2015, 0.0024243),
	(3, 1, 2020, 0.00244032),
	(3, 1, 2025, 0.00239007),
	(3, 1, 2030, 0.00238549),
	(3, 1, 2035, 0.00236398),
	(3, 1, 2040, 0.00236398),
	(3, 1, 2050, 0.00236398),
	(3, 2, 2010, 0.542434),
	(3, 2, 2012, 0.54835),
	(3, 2, 2015, 0.551631),
	(3, 2, 2020, 0.556235),
	(3, 2, 2025, 0.555415),
	(3, 2, 2030, 0.555917),
	(3, 2, 2035, 0.55612),
	(3, 2, 2040, 0.55612),
	(3, 2, 2050, 0.55612),
	(3, 3, 2010, 6.95603e-005),
	(3, 3, 2012, 7.95454e-005),
	(3, 3, 2015, 9e-005),
	(3, 3, 2020, 9.80674e-005),
	(3, 3, 2025, 9.76304e-005),
	(3, 3, 2030, 0.000105589),
	(3, 3, 2035, 0.00010072),
	(3, 3, 2040, 0.00010072),
	(3, 3, 2050, 0.00010072),
	(3, 4, 2010, 0.0788466),
	(3, 4, 2012, 0.0796401),
	(3, 4, 2015, 0.0799503),
	(3, 4, 2020, 0.0799523),
	(3, 4, 2025, 0.0798751),
	(3, 4, 2030, 0.0803679),
	(3, 4, 2035, 0.0811729),
	(3, 4, 2040, 0.0811729),
	(3, 4, 2050, 0.0811729),
	(3, 5, 2010, 7.19956e-005),
	(3, 5, 2012, 7.69567e-005),
	(3, 5, 2015, 9e-005),
	(3, 5, 2020, 9.01715e-005),
	(3, 5, 2025, 8.59516e-005),
	(3, 5, 2030, 8.79031e-005),
	(3, 5, 2035, 8.63315e-005),
	(3, 5, 2040, 8.63315e-005),
	(3, 5, 2050, 8.63315e-005),
	(3, 6, 2010, 0.210601),
	(3, 6, 2012, 0.208836),
	(3, 6, 2015, 0.209126),
	(3, 6, 2020, 0.207894),
	(3, 6, 2025, 0.208652),
	(3, 6, 2030, 0.208593),
	(3, 6, 2035, 0.208182),
	(3, 6, 2040, 0.208182),
	(3, 6, 2050, 0.208182),
	(3, 11, 2010, 0.00698254),
	(3, 11, 2012, 0.00706658),
	(3, 11, 2015, 0.00711164),
	(3, 11, 2020, 0.00714431),
	(3, 11, 2025, 0.00709421),
	(3, 11, 2030, 0.00709589),
	(3, 11, 2035, 0.00705518),
	(3, 11, 2040, 0.00705518),
	(3, 11, 2050, 0.00705518),
	(3, 12, 2010, 0.000164803),
	(3, 12, 2012, 0.000161566),
	(3, 12, 2015, 0.000161001),
	(3, 12, 2020, 0.000157067),
	(3, 12, 2025, 0.000159977),
	(3, 12, 2030, 0.000159273),
	(3, 12, 2035, 0.000156492),
	(3, 12, 2040, 0.000156492),
	(3, 12, 2050, 0.000156492),
	(3, 13, 2010, 0.155003),
	(3, 13, 2012, 0.149732),
	(3, 13, 2015, 0.145642),
	(3, 13, 2020, 0.142238),
	(3, 13, 2025, 0.142492),
	(3, 13, 2030, 0.14157),
	(3, 13, 2035, 0.141064),
	(3, 13, 2040, 0.141064),
	(3, 13, 2050, 0.141064),
	(3, 14, 2010, 0.000553922),
	(3, 14, 2012, 0.000539207),
	(3, 14, 2015, 0.000526955),
	(3, 14, 2020, 0.000512625),
	(3, 14, 2025, 0.000510817),
	(3, 14, 2030, 0.000514107),
	(3, 14, 2035, 0.000513264),
	(3, 14, 2040, 0.000513264),
	(3, 14, 2050, 0.000513264),
	(3, 15, 2010, 0.0031635),
	(3, 15, 2012, 0.00321134),
	(3, 15, 2015, 0.00324684),
	(3, 15, 2020, 0.00323839),
	(3, 15, 2025, 0.0032281),
	(3, 15, 2030, 0.00320396),
	(3, 15, 2035, 0.00318466),
	(3, 15, 2040, 0.00318466),
	(3, 15, 2050, 0.00318466),
	(4, 1, 2010, 0.00211004),
	(4, 1, 2012, 0.00230684),
	(4, 1, 2015, 0.0024243),
	(4, 1, 2020, 0.00244032),
	(4, 1, 2025, 0.00239007),
	(4, 1, 2030, 0.00238549),
	(4, 1, 2035, 0.00236398),
	(4, 1, 2040, 0.00236398),
	(4, 1, 2050, 0.00236398),
	(4, 2, 2010, 0.542434),
	(4, 2, 2012, 0.54835),
	(4, 2, 2015, 0.551631),
	(4, 2, 2020, 0.556235),
	(4, 2, 2025, 0.555415),
	(4, 2, 2030, 0.555917),
	(4, 2, 2035, 0.55612),
	(4, 2, 2040, 0.55612),
	(4, 2, 2050, 0.55612),
	(4, 3, 2010, 6.95603e-005),
	(4, 3, 2012, 7.95454e-005),
	(4, 3, 2015, 9e-005),
	(4, 3, 2020, 9.80674e-005),
	(4, 3, 2025, 9.76304e-005),
	(4, 3, 2030, 0.000105589),
	(4, 3, 2035, 0.00010072),
	(4, 3, 2040, 0.00010072),
	(4, 3, 2050, 0.00010072),
	(4, 4, 2010, 0.0788466),
	(4, 4, 2012, 0.0796401),
	(4, 4, 2015, 0.0799503),
	(4, 4, 2020, 0.0799523),
	(4, 4, 2025, 0.0798751),
	(4, 4, 2030, 0.0803679),
	(4, 4, 2035, 0.0811729),
	(4, 4, 2040, 0.0811729),
	(4, 4, 2050, 0.0811729),
	(4, 5, 2010, 7.19956e-005),
	(4, 5, 2012, 7.69567e-005),
	(4, 5, 2015, 9e-005),
	(4, 5, 2020, 9.01715e-005),
	(4, 5, 2025, 8.59516e-005),
	(4, 5, 2030, 8.79031e-005),
	(4, 5, 2035, 8.63315e-005),
	(4, 5, 2040, 8.63315e-005),
	(4, 5, 2050, 8.63315e-005),
	(4, 6, 2010, 0.210601),
	(4, 6, 2012, 0.208836),
	(4, 6, 2015, 0.209126),
	(4, 6, 2020, 0.207894),
	(4, 6, 2025, 0.208652),
	(4, 6, 2030, 0.208593),
	(4, 6, 2035, 0.208182),
	(4, 6, 2040, 0.208182),
	(4, 6, 2050, 0.208182),
	(4, 11, 2010, 0.00698254),
	(4, 11, 2012, 0.00706658),
	(4, 11, 2015, 0.00711164),
	(4, 11, 2020, 0.00714431),
	(4, 11, 2025, 0.00709421),
	(4, 11, 2030, 0.00709589),
	(4, 11, 2035, 0.00705518),
	(4, 11, 2040, 0.00705518),
	(4, 11, 2050, 0.00705518),
	(4, 12, 2010, 0.000164803),
	(4, 12, 2012, 0.000161566),
	(4, 12, 2015, 0.000161001),
	(4, 12, 2020, 0.000157067),
	(4, 12, 2025, 0.000159977),
	(4, 12, 2030, 0.000159273),
	(4, 12, 2035, 0.000156492),
	(4, 12, 2040, 0.000156492),
	(4, 12, 2050, 0.000156492),
	(4, 13, 2010, 0.155003),
	(4, 13, 2012, 0.149732),
	(4, 13, 2015, 0.145642),
	(4, 13, 2020, 0.142238),
	(4, 13, 2025, 0.142492),
	(4, 13, 2030, 0.14157),
	(4, 13, 2035, 0.141064),
	(4, 13, 2040, 0.141064),
	(4, 13, 2050, 0.141064),
	(4, 14, 2010, 0.000553922),
	(4, 14, 2012, 0.000539207),
	(4, 14, 2015, 0.000526955),
	(4, 14, 2020, 0.000512625),
	(4, 14, 2025, 0.000510817),
	(4, 14, 2030, 0.000514107),
	(4, 14, 2035, 0.000513264),
	(4, 14, 2040, 0.000513264),
	(4, 14, 2050, 0.000513264),
	(4, 15, 2010, 0.0031635),
	(4, 15, 2012, 0.00321134),
	(4, 15, 2015, 0.00324684),
	(4, 15, 2020, 0.00323839),
	(4, 15, 2025, 0.0032281),
	(4, 15, 2030, 0.00320396),
	(4, 15, 2035, 0.00318466),
	(4, 15, 2040, 0.00318466),
	(4, 15, 2050, 0.00318466),
	(5, 1, 2010, 0.00211004),
	(5, 1, 2012, 0.00230684),
	(5, 1, 2015, 0.0024243),
	(5, 1, 2020, 0.00244032),
	(5, 1, 2025, 0.00239007),
	(5, 1, 2030, 0.00238549),
	(5, 1, 2035, 0.00236398),
	(5, 1, 2040, 0.00236398),
	(5, 1, 2050, 0.00236398),
	(5, 2, 2010, 0.542434),
	(5, 2, 2012, 0.54835),
	(5, 2, 2015, 0.551631),
	(5, 2, 2020, 0.556235),
	(5, 2, 2025, 0.555415),
	(5, 2, 2030, 0.555917),
	(5, 2, 2035, 0.55612),
	(5, 2, 2040, 0.55612),
	(5, 2, 2050, 0.55612),
	(5, 3, 2010, 6.95603e-005),
	(5, 3, 2012, 7.95454e-005),
	(5, 3, 2015, 9e-005),
	(5, 3, 2020, 9.80674e-005),
	(5, 3, 2025, 9.76304e-005),
	(5, 3, 2030, 0.000105589),
	(5, 3, 2035, 0.00010072),
	(5, 3, 2040, 0.00010072),
	(5, 3, 2050, 0.00010072),
	(5, 4, 2010, 0.0788466),
	(5, 4, 2012, 0.0796401),
	(5, 4, 2015, 0.0799503),
	(5, 4, 2020, 0.0799523),
	(5, 4, 2025, 0.0798751),
	(5, 4, 2030, 0.0803679),
	(5, 4, 2035, 0.0811729),
	(5, 4, 2040, 0.0811729),
	(5, 4, 2050, 0.0811729),
	(5, 5, 2010, 7.19956e-005),
	(5, 5, 2012, 7.69567e-005),
	(5, 5, 2015, 9e-005),
	(5, 5, 2020, 9.01715e-005),
	(5, 5, 2025, 8.59516e-005),
	(5, 5, 2030, 8.79031e-005),
	(5, 5, 2035, 8.63315e-005),
	(5, 5, 2040, 8.63315e-005),
	(5, 5, 2050, 8.63315e-005),
	(5, 6, 2010, 0.210601),
	(5, 6, 2012, 0.208836),
	(5, 6, 2015, 0.209126),
	(5, 6, 2020, 0.207894),
	(5, 6, 2025, 0.208652),
	(5, 6, 2030, 0.208593),
	(5, 6, 2035, 0.208182),
	(5, 6, 2040, 0.208182),
	(5, 6, 2050, 0.208182),
	(5, 11, 2010, 0.00698254),
	(5, 11, 2012, 0.00706658),
	(5, 11, 2015, 0.00711164),
	(5, 11, 2020, 0.00714431),
	(5, 11, 2025, 0.00709421),
	(5, 11, 2030, 0.00709589),
	(5, 11, 2035, 0.00705518),
	(5, 11, 2040, 0.00705518),
	(5, 11, 2050, 0.00705518),
	(5, 12, 2010, 0.000164803),
	(5, 12, 2012, 0.000161566),
	(5, 12, 2015, 0.000161001),
	(5, 12, 2020, 0.000157067),
	(5, 12, 2025, 0.000159977),
	(5, 12, 2030, 0.000159273),
	(5, 12, 2035, 0.000156492),
	(5, 12, 2040, 0.000156492),
	(5, 12, 2050, 0.000156492),
	(5, 13, 2010, 0.155003),
	(5, 13, 2012, 0.149732),
	(5, 13, 2015, 0.145642),
	(5, 13, 2020, 0.142238),
	(5, 13, 2025, 0.142492),
	(5, 13, 2030, 0.14157),
	(5, 13, 2035, 0.141064),
	(5, 13, 2040, 0.141064),
	(5, 13, 2050, 0.141064),
	(5, 14, 2010, 0.000553922),
	(5, 14, 2012, 0.000539207),
	(5, 14, 2015, 0.000526955),
	(5, 14, 2020, 0.000512625),
	(5, 14, 2025, 0.000510817),
	(5, 14, 2030, 0.000514107),
	(5, 14, 2035, 0.000513264),
	(5, 14, 2040, 0.000513264),
	(5, 14, 2050, 0.000513264),
	(5, 15, 2010, 0.0031635),
	(5, 15, 2012, 0.00321134),
	(5, 15, 2015, 0.00324684),
	(5, 15, 2020, 0.00323839),
	(5, 15, 2025, 0.0032281),
	(5, 15, 2030, 0.00320396),
	(5, 15, 2035, 0.00318466),
	(5, 15, 2040, 0.00318466),
	(5, 15, 2050, 0.00318466),
	(6, 1, 2010, 0.00211004),
	(6, 1, 2012, 0.00230684),
	(6, 1, 2015, 0.0024243),
	(6, 1, 2020, 0.00244032),
	(6, 1, 2025, 0.00239007),
	(6, 1, 2030, 0.00238549),
	(6, 1, 2035, 0.00236398),
	(6, 1, 2040, 0.00236398),
	(6, 1, 2050, 0.00236398),
	(6, 2, 2010, 0.542434),
	(6, 2, 2012, 0.54835),
	(6, 2, 2015, 0.551631),
	(6, 2, 2020, 0.556235),
	(6, 2, 2025, 0.555415),
	(6, 2, 2030, 0.555917),
	(6, 2, 2035, 0.55612),
	(6, 2, 2040, 0.55612),
	(6, 2, 2050, 0.55612),
	(6, 3, 2010, 6.95603e-005),
	(6, 3, 2012, 7.95454e-005),
	(6, 3, 2015, 9e-005),
	(6, 3, 2020, 9.80674e-005),
	(6, 3, 2025, 9.76304e-005),
	(6, 3, 2030, 0.000105589),
	(6, 3, 2035, 0.00010072),
	(6, 3, 2040, 0.00010072),
	(6, 3, 2050, 0.00010072),
	(6, 4, 2010, 0.0788466),
	(6, 4, 2012, 0.0796401),
	(6, 4, 2015, 0.0799503),
	(6, 4, 2020, 0.0799523),
	(6, 4, 2025, 0.0798751),
	(6, 4, 2030, 0.0803679),
	(6, 4, 2035, 0.0811729),
	(6, 4, 2040, 0.0811729),
	(6, 4, 2050, 0.0811729),
	(6, 5, 2010, 7.19956e-005),
	(6, 5, 2012, 7.69567e-005),
	(6, 5, 2015, 9e-005),
	(6, 5, 2020, 9.01715e-005),
	(6, 5, 2025, 8.59516e-005),
	(6, 5, 2030, 8.79031e-005),
	(6, 5, 2035, 8.63315e-005),
	(6, 5, 2040, 8.63315e-005),
	(6, 5, 2050, 8.63315e-005),
	(6, 6, 2010, 0.210601),
	(6, 6, 2012, 0.208836),
	(6, 6, 2015, 0.209126),
	(6, 6, 2020, 0.207894),
	(6, 6, 2025, 0.208652),
	(6, 6, 2030, 0.208593),
	(6, 6, 2035, 0.208182),
	(6, 6, 2040, 0.208182),
	(6, 6, 2050, 0.208182),
	(6, 11, 2010, 0.00698254),
	(6, 11, 2012, 0.00706658),
	(6, 11, 2015, 0.00711164),
	(6, 11, 2020, 0.00714431),
	(6, 11, 2025, 0.00709421),
	(6, 11, 2030, 0.00709589),
	(6, 11, 2035, 0.00705518),
	(6, 11, 2040, 0.00705518),
	(6, 11, 2050, 0.00705518),
	(6, 12, 2010, 0.000164803),
	(6, 12, 2012, 0.000161566),
	(6, 12, 2015, 0.000161001),
	(6, 12, 2020, 0.000157067),
	(6, 12, 2025, 0.000159977),
	(6, 12, 2030, 0.000159273),
	(6, 12, 2035, 0.000156492),
	(6, 12, 2040, 0.000156492),
	(6, 12, 2050, 0.000156492),
	(6, 13, 2010, 0.155003),
	(6, 13, 2012, 0.149732),
	(6, 13, 2015, 0.145642),
	(6, 13, 2020, 0.142238),
	(6, 13, 2025, 0.142492),
	(6, 13, 2030, 0.14157),
	(6, 13, 2035, 0.141064),
	(6, 13, 2040, 0.141064),
	(6, 13, 2050, 0.141064),
	(6, 14, 2010, 0.000553922),
	(6, 14, 2012, 0.000539207),
	(6, 14, 2015, 0.000526955),
	(6, 14, 2020, 0.000512625),
	(6, 14, 2025, 0.000510817),
	(6, 14, 2030, 0.000514107),
	(6, 14, 2035, 0.000513264),
	(6, 14, 2040, 0.000513264),
	(6, 14, 2050, 0.000513264),
	(6, 15, 2010, 0.0031635),
	(6, 15, 2012, 0.00321134),
	(6, 15, 2015, 0.00324684),
	(6, 15, 2020, 0.00323839),
	(6, 15, 2025, 0.0032281),
	(6, 15, 2030, 0.00320396),
	(6, 15, 2035, 0.00318466),
	(6, 15, 2040, 0.00318466),
	(6, 15, 2050, 0.00318466),
	(7, 1, 2010, 0.00211004),
	(7, 1, 2012, 0.00230684),
	(7, 1, 2015, 0.0024243),
	(7, 1, 2020, 0.00244032),
	(7, 1, 2025, 0.00239007),
	(7, 1, 2030, 0.00238549),
	(7, 1, 2035, 0.00236398),
	(7, 1, 2040, 0.00236398),
	(7, 1, 2050, 0.00236398),
	(7, 2, 2010, 0.542434),
	(7, 2, 2012, 0.54835),
	(7, 2, 2015, 0.551631),
	(7, 2, 2020, 0.556235),
	(7, 2, 2025, 0.555415),
	(7, 2, 2030, 0.555917),
	(7, 2, 2035, 0.55612),
	(7, 2, 2040, 0.55612),
	(7, 2, 2050, 0.55612),
	(7, 3, 2010, 6.95603e-005),
	(7, 3, 2012, 7.95454e-005),
	(7, 3, 2015, 9e-005),
	(7, 3, 2020, 9.80674e-005),
	(7, 3, 2025, 9.76304e-005),
	(7, 3, 2030, 0.000105589),
	(7, 3, 2035, 0.00010072),
	(7, 3, 2040, 0.00010072),
	(7, 3, 2050, 0.00010072),
	(7, 4, 2010, 0.0788466),
	(7, 4, 2012, 0.0796401),
	(7, 4, 2015, 0.0799503),
	(7, 4, 2020, 0.0799523),
	(7, 4, 2025, 0.0798751),
	(7, 4, 2030, 0.0803679),
	(7, 4, 2035, 0.0811729),
	(7, 4, 2040, 0.0811729),
	(7, 4, 2050, 0.0811729),
	(7, 5, 2010, 7.19956e-005),
	(7, 5, 2012, 7.69567e-005),
	(7, 5, 2015, 9e-005),
	(7, 5, 2020, 9.01715e-005),
	(7, 5, 2025, 8.59516e-005),
	(7, 5, 2030, 8.79031e-005),
	(7, 5, 2035, 8.63315e-005),
	(7, 5, 2040, 8.63315e-005),
	(7, 5, 2050, 8.63315e-005),
	(7, 6, 2010, 0.210601),
	(7, 6, 2012, 0.208836),
	(7, 6, 2015, 0.209126),
	(7, 6, 2020, 0.207894),
	(7, 6, 2025, 0.208652),
	(7, 6, 2030, 0.208593),
	(7, 6, 2035, 0.208182),
	(7, 6, 2040, 0.208182),
	(7, 6, 2050, 0.208182),
	(7, 11, 2010, 0.00698254),
	(7, 11, 2012, 0.00706658),
	(7, 11, 2015, 0.00711164),
	(7, 11, 2020, 0.00714431),
	(7, 11, 2025, 0.00709421),
	(7, 11, 2030, 0.00709589),
	(7, 11, 2035, 0.00705518),
	(7, 11, 2040, 0.00705518),
	(7, 11, 2050, 0.00705518),
	(7, 12, 2010, 0.000164803),
	(7, 12, 2012, 0.000161566),
	(7, 12, 2015, 0.000161001),
	(7, 12, 2020, 0.000157067),
	(7, 12, 2025, 0.000159977),
	(7, 12, 2030, 0.000159273),
	(7, 12, 2035, 0.000156492),
	(7, 12, 2040, 0.000156492),
	(7, 12, 2050, 0.000156492),
	(7, 13, 2010, 0.155003),
	(7, 13, 2012, 0.149732),
	(7, 13, 2015, 0.145642),
	(7, 13, 2020, 0.142238),
	(7, 13, 2025, 0.142492),
	(7, 13, 2030, 0.14157),
	(7, 13, 2035, 0.141064),
	(7, 13, 2040, 0.141064),
	(7, 13, 2050, 0.141064),
	(7, 14, 2010, 0.000553922),
	(7, 14, 2012, 0.000539207),
	(7, 14, 2015, 0.000526955),
	(7, 14, 2020, 0.000512625),
	(7, 14, 2025, 0.000510817),
	(7, 14, 2030, 0.000514107),
	(7, 14, 2035, 0.000513264),
	(7, 14, 2040, 0.000513264),
	(7, 14, 2050, 0.000513264),
	(7, 15, 2010, 0.0031635),
	(7, 15, 2012, 0.00321134),
	(7, 15, 2015, 0.00324684),
	(7, 15, 2020, 0.00323839),
	(7, 15, 2025, 0.0032281),
	(7, 15, 2030, 0.00320396),
	(7, 15, 2035, 0.00318466),
	(7, 15, 2040, 0.00318466),
	(7, 15, 2050, 0.00318466),
	(8, 1, 2010, 0.00211004),
	(8, 1, 2012, 0.00230684),
	(8, 1, 2015, 0.0024243),
	(8, 1, 2020, 0.00244032),
	(8, 1, 2025, 0.00239007),
	(8, 1, 2030, 0.00238549),
	(8, 1, 2035, 0.00236398),
	(8, 1, 2040, 0.00236398),
	(8, 1, 2050, 0.00236398),
	(8, 2, 2010, 0.542434),
	(8, 2, 2012, 0.54835),
	(8, 2, 2015, 0.551631),
	(8, 2, 2020, 0.556235),
	(8, 2, 2025, 0.555415),
	(8, 2, 2030, 0.555917),
	(8, 2, 2035, 0.55612),
	(8, 2, 2040, 0.55612),
	(8, 2, 2050, 0.55612),
	(8, 3, 2010, 6.95603e-005),
	(8, 3, 2012, 7.95454e-005),
	(8, 3, 2015, 9e-005),
	(8, 3, 2020, 9.80674e-005),
	(8, 3, 2025, 9.76304e-005),
	(8, 3, 2030, 0.000105589),
	(8, 3, 2035, 0.00010072),
	(8, 3, 2040, 0.00010072),
	(8, 3, 2050, 0.00010072),
	(8, 4, 2010, 0.0788466),
	(8, 4, 2012, 0.0796401),
	(8, 4, 2015, 0.0799503),
	(8, 4, 2020, 0.0799523),
	(8, 4, 2025, 0.0798751),
	(8, 4, 2030, 0.0803679),
	(8, 4, 2035, 0.0811729),
	(8, 4, 2040, 0.0811729),
	(8, 4, 2050, 0.0811729),
	(8, 5, 2010, 7.19956e-005),
	(8, 5, 2012, 7.69567e-005),
	(8, 5, 2015, 9e-005),
	(8, 5, 2020, 9.01715e-005),
	(8, 5, 2025, 8.59516e-005),
	(8, 5, 2030, 8.79031e-005),
	(8, 5, 2035, 8.63315e-005),
	(8, 5, 2040, 8.63315e-005),
	(8, 5, 2050, 8.63315e-005),
	(8, 6, 2010, 0.210601),
	(8, 6, 2012, 0.208836),
	(8, 6, 2015, 0.209126),
	(8, 6, 2020, 0.207894),
	(8, 6, 2025, 0.208652),
	(8, 6, 2030, 0.208593),
	(8, 6, 2035, 0.208182),
	(8, 6, 2040, 0.208182),
	(8, 6, 2050, 0.208182),
	(8, 11, 2010, 0.00698254),
	(8, 11, 2012, 0.00706658),
	(8, 11, 2015, 0.00711164),
	(8, 11, 2020, 0.00714431),
	(8, 11, 2025, 0.00709421),
	(8, 11, 2030, 0.00709589),
	(8, 11, 2035, 0.00705518),
	(8, 11, 2040, 0.00705518),
	(8, 11, 2050, 0.00705518),
	(8, 12, 2010, 0.000164803),
	(8, 12, 2012, 0.000161566),
	(8, 12, 2015, 0.000161001),
	(8, 12, 2020, 0.000157067),
	(8, 12, 2025, 0.000159977),
	(8, 12, 2030, 0.000159273),
	(8, 12, 2035, 0.000156492),
	(8, 12, 2040, 0.000156492),
	(8, 12, 2050, 0.000156492),
	(8, 13, 2010, 0.155003),
	(8, 13, 2012, 0.149732),
	(8, 13, 2015, 0.145642),
	(8, 13, 2020, 0.142238),
	(8, 13, 2025, 0.142492),
	(8, 13, 2030, 0.14157),
	(8, 13, 2035, 0.141064),
	(8, 13, 2040, 0.141064),
	(8, 13, 2050, 0.141064),
	(8, 14, 2010, 0.000553922),
	(8, 14, 2012, 0.000539207),
	(8, 14, 2015, 0.000526955),
	(8, 14, 2020, 0.000512625),
	(8, 14, 2025, 0.000510817),
	(8, 14, 2030, 0.000514107),
	(8, 14, 2035, 0.000513264),
	(8, 14, 2040, 0.000513264),
	(8, 14, 2050, 0.000513264),
	(8, 15, 2010, 0.0031635),
	(8, 15, 2012, 0.00321134),
	(8, 15, 2015, 0.00324684),
	(8, 15, 2020, 0.00323839),
	(8, 15, 2025, 0.0032281),
	(8, 15, 2030, 0.00320396),
	(8, 15, 2035, 0.00318466),
	(8, 15, 2040, 0.00318466),
	(8, 15, 2050, 0.00318466);
GO
INSERT INTO [emfac].[emfac_vehicle_map]
VALUES
	(9, 7, 2010, 0.303507),
	(9, 7, 2012, 0.301776),
	(9, 7, 2015, 0.300178),
	(9, 7, 2020, 0.300233),
	(9, 7, 2025, 0.300216),
	(9, 7, 2030, 0.344136),
	(9, 7, 2035, 0.300895),
	(9, 7, 2040, 0.300895),
	(9, 7, 2050, 0.300895),
	(9, 8, 2010, 0.570204),
	(9, 8, 2012, 0.57213),
	(9, 8, 2015, 0.574162),
	(9, 8, 2020, 0.575111),
	(9, 8, 2025, 0.574309),
	(9, 8, 2030, 0.655864),
	(9, 8, 2035, 0.573493),
	(9, 8, 2040, 0.573493),
	(9, 8, 2050, 0.573493),
	(9, 9, 2010, 0.0801491),
	(9, 9, 2012, 0.0792015),
	(9, 9, 2015, 0.078034),
	(9, 9, 2020, 0.0769641),
	(9, 9, 2025, 0.07769),
	(9, 9, 2030, 0),
	(9, 9, 2035, 0.0776988),
	(9, 9, 2040, 0.0776988),
	(9, 9, 2050, 0.0776988),
	(9, 10, 2010, 0.0461394),
	(9, 10, 2012, 0.0468925),
	(9, 10, 2015, 0.0476266),
	(9, 10, 2020, 0.047692),
	(9, 10, 2025, 0.0477853),
	(9, 10, 2030, 0),
	(9, 10, 2035, 0.0479133),
	(9, 10, 2040, 0.0479133),
	(9, 10, 2050, 0.0479133),
	(10, 7, 2010, 0.303507),
	(10, 7, 2012, 0.301776),
	(10, 7, 2015, 0.300178),
	(10, 7, 2020, 0.300233),
	(10, 7, 2025, 0.300216),
	(10, 7, 2030, 0.300216),
	(10, 7, 2035, 0.300895),
	(10, 7, 2040, 0.300895),
	(10, 7, 2050, 0.300895),
	(10, 8, 2010, 0.570204),
	(10, 8, 2012, 0.57213),
	(10, 8, 2015, 0.574162),
	(10, 8, 2020, 0.575111),
	(10, 8, 2025, 0.574309),
	(10, 8, 2030, 0.574309),
	(10, 8, 2035, 0.573493),
	(10, 8, 2040, 0.573493),
	(10, 8, 2050, 0.573493),
	(10, 9, 2010, 0.0801491),
	(10, 9, 2012, 0.0792015),
	(10, 9, 2015, 0.078034),
	(10, 9, 2020, 0.0769641),
	(10, 9, 2025, 0.07769),
	(10, 9, 2030, 0.07769),
	(10, 9, 2035, 0.0776988),
	(10, 9, 2040, 0.0776988),
	(10, 9, 2050, 0.0776988),
	(10, 10, 2010, 0.0461394),
	(10, 10, 2012, 0.0468925),
	(10, 10, 2015, 0.0476266),
	(10, 10, 2020, 0.047692),
	(10, 10, 2025, 0.0477853),
	(10, 10, 2030, 0.0477853),
	(10, 10, 2035, 0.0479133),
	(10, 10, 2040, 0.0479133),
	(10, 10, 2050, 0.0479133),
	(11, 16, 2010, 0.00614884),
	(11, 16, 2012, 0.00596338),
	(11, 16, 2015, 0.0057151),
	(11, 16, 2020, 0.00549033),
	(11, 16, 2025, 0.00500768),
	(11, 16, 2030, 0.00456899),
	(11, 16, 2035, 0.00432633),
	(11, 16, 2040, 0.00432633),
	(11, 16, 2050, 0.00432633),
	(11, 17, 2010, 0.000567482),
	(11, 17, 2012, 0.000578435),
	(11, 17, 2015, 0.0006033),
	(11, 17, 2020, 0.000608623),
	(11, 17, 2025, 0.000594397),
	(11, 17, 2030, 0.000596432),
	(11, 17, 2035, 0.000619406),
	(11, 17, 2040, 0.000619406),
	(11, 17, 2050, 0.000619406),
	(11, 18, 2010, 0.00193034),
	(11, 18, 2012, 0.00193602),
	(11, 18, 2015, 0.00196649),
	(11, 18, 2020, 0.0020816),
	(11, 18, 2025, 0.00208846),
	(11, 18, 2030, 0.00208238),
	(11, 18, 2035, 0.00214434),
	(11, 18, 2040, 0.00214434),
	(11, 18, 2050, 0.00214434),
	(11, 19, 2010, 0.0369999),
	(11, 19, 2012, 0.0395902),
	(11, 19, 2015, 0.0427573),
	(11, 19, 2020, 0.0371945),
	(11, 19, 2025, 0.0389078),
	(11, 19, 2030, 0.0423121),
	(11, 19, 2035, 0.0383773),
	(11, 19, 2040, 0.0383773),
	(11, 19, 2050, 0.0383773),
	(11, 20, 2010, 0.106387),
	(11, 20, 2012, 0.109516),
	(11, 20, 2015, 0.110717),
	(11, 20, 2020, 0.101227),
	(11, 20, 2025, 0.115431),
	(11, 20, 2030, 0.127145),
	(11, 20, 2035, 0.11421),
	(11, 20, 2040, 0.11421),
	(11, 20, 2050, 0.11421),
	(11, 21, 2010, 0.172242),
	(11, 21, 2012, 0.172395),
	(11, 21, 2015, 0.174664),
	(11, 21, 2020, 0.170394),
	(11, 21, 2025, 0.159139),
	(11, 21, 2030, 0.156594),
	(11, 21, 2035, 0.160826),
	(11, 21, 2040, 0.160826),
	(11, 21, 2050, 0.160826),
	(11, 22, 2010, 0.497354),
	(11, 22, 2012, 0.48476),
	(11, 22, 2015, 0.470937),
	(11, 22, 2020, 0.485427),
	(11, 22, 2025, 0.481314),
	(11, 22, 2030, 0.471092),
	(11, 22, 2035, 0.47759),
	(11, 22, 2040, 0.47759),
	(11, 22, 2050, 0.47759),
	(11, 23, 2010, 0.000325349),
	(11, 23, 2012, 0.000331629),
	(11, 23, 2015, 0.000345885),
	(11, 23, 2020, 0.000348936),
	(11, 23, 2025, 0.00034078),
	(11, 23, 2030, 0.000341947),
	(11, 23, 2035, 0.000355119),
	(11, 23, 2040, 0.000355119),
	(11, 23, 2050, 0.000355119),
	(11, 24, 2010, 0.00110671),
	(11, 24, 2012, 0.00110996),
	(11, 24, 2015, 0.00112743),
	(11, 24, 2020, 0.00119342),
	(11, 24, 2025, 0.00119736),
	(11, 24, 2030, 0.00119387),
	(11, 24, 2035, 0.00122939),
	(11, 24, 2040, 0.00122939),
	(11, 24, 2050, 0.00122939),
	(11, 25, 2010, 0.030954),
	(11, 25, 2012, 0.0314301),
	(11, 25, 2015, 0.0322679),
	(11, 25, 2020, 0.0347673),
	(11, 25, 2025, 0.0355659),
	(11, 25, 2030, 0.036395),
	(11, 25, 2035, 0.0386513),
	(11, 25, 2040, 0.0386513),
	(11, 25, 2050, 0.0386513),
	(11, 26, 2010, 0.00399276),
	(11, 26, 2012, 0.00395254),
	(11, 26, 2015, 0.00390071),
	(11, 26, 2020, 0.00407824),
	(11, 26, 2025, 0.00408534),
	(11, 26, 2030, 0.00410344),
	(11, 26, 2035, 0.00429612),
	(11, 26, 2040, 0.00429612),
	(11, 26, 2050, 0.00429612),
	(11, 27, 2010, 0.141991),
	(11, 27, 2012, 0.148437),
	(11, 27, 2015, 0.154999),
	(11, 27, 2020, 0.15719),
	(11, 27, 2025, 0.156328),
	(11, 27, 2030, 0.153575),
	(11, 27, 2035, 0.157375),
	(11, 27, 2040, 0.157375),
	(11, 27, 2050, 0.157375),
	(12, 16, 2010, 0.00614884),
	(12, 16, 2012, 0.00596338),
	(12, 16, 2015, 0.0057151),
	(12, 16, 2020, 0.00549033),
	(12, 16, 2025, 0.00500768),
	(12, 16, 2030, 0.00456899),
	(12, 16, 2035, 0.00432633),
	(12, 16, 2040, 0.00432633),
	(12, 16, 2050, 0.00432633),
	(12, 17, 2010, 0.000567482),
	(12, 17, 2012, 0.000578435),
	(12, 17, 2015, 0.0006033),
	(12, 17, 2020, 0.000608623),
	(12, 17, 2025, 0.000594397),
	(12, 17, 2030, 0.000596432),
	(12, 17, 2035, 0.000619406),
	(12, 17, 2040, 0.000619406),
	(12, 17, 2050, 0.000619406),
	(12, 18, 2010, 0.00193034),
	(12, 18, 2012, 0.00193602),
	(12, 18, 2015, 0.00196649),
	(12, 18, 2020, 0.0020816),
	(12, 18, 2025, 0.00208846),
	(12, 18, 2030, 0.00208238),
	(12, 18, 2035, 0.00214434),
	(12, 18, 2040, 0.00214434),
	(12, 18, 2050, 0.00214434),
	(12, 19, 2010, 0.0369999),
	(12, 19, 2012, 0.0395902),
	(12, 19, 2015, 0.0427573),
	(12, 19, 2020, 0.0371945),
	(12, 19, 2025, 0.0389078),
	(12, 19, 2030, 0.0423121),
	(12, 19, 2035, 0.0383773),
	(12, 19, 2040, 0.0383773),
	(12, 19, 2050, 0.0383773),
	(12, 20, 2010, 0.106387),
	(12, 20, 2012, 0.109516),
	(12, 20, 2015, 0.110717),
	(12, 20, 2020, 0.101227),
	(12, 20, 2025, 0.115431),
	(12, 20, 2030, 0.127145),
	(12, 20, 2035, 0.11421),
	(12, 20, 2040, 0.11421),
	(12, 20, 2050, 0.11421),
	(12, 21, 2010, 0.172242),
	(12, 21, 2012, 0.172395),
	(12, 21, 2015, 0.174664),
	(12, 21, 2020, 0.170394),
	(12, 21, 2025, 0.159139),
	(12, 21, 2030, 0.156594),
	(12, 21, 2035, 0.160826),
	(12, 21, 2040, 0.160826),
	(12, 21, 2050, 0.160826),
	(12, 22, 2010, 0.497354),
	(12, 22, 2012, 0.48476),
	(12, 22, 2015, 0.470937),
	(12, 22, 2020, 0.485427),
	(12, 22, 2025, 0.481314),
	(12, 22, 2030, 0.471092),
	(12, 22, 2035, 0.47759),
	(12, 22, 2040, 0.47759),
	(12, 22, 2050, 0.47759),
	(12, 23, 2010, 0.000325349),
	(12, 23, 2012, 0.000331629),
	(12, 23, 2015, 0.000345885),
	(12, 23, 2020, 0.000348936),
	(12, 23, 2025, 0.00034078),
	(12, 23, 2030, 0.000341947),
	(12, 23, 2035, 0.000355119),
	(12, 23, 2040, 0.000355119),
	(12, 23, 2050, 0.000355119),
	(12, 24, 2010, 0.00110671),
	(12, 24, 2012, 0.00110996),
	(12, 24, 2015, 0.00112743),
	(12, 24, 2020, 0.00119342),
	(12, 24, 2025, 0.00119736),
	(12, 24, 2030, 0.00119387),
	(12, 24, 2035, 0.00122939),
	(12, 24, 2040, 0.00122939),
	(12, 24, 2050, 0.00122939),
	(12, 25, 2010, 0.030954),
	(12, 25, 2012, 0.0314301),
	(12, 25, 2015, 0.0322679),
	(12, 25, 2020, 0.0347673),
	(12, 25, 2025, 0.0355659),
	(12, 25, 2030, 0.036395),
	(12, 25, 2035, 0.0386513),
	(12, 25, 2040, 0.0386513),
	(12, 25, 2050, 0.0386513),
	(12, 26, 2010, 0.00399276),
	(12, 26, 2012, 0.00395254),
	(12, 26, 2015, 0.00390071),
	(12, 26, 2020, 0.00407824),
	(12, 26, 2025, 0.00408534),
	(12, 26, 2030, 0.00410344),
	(12, 26, 2035, 0.00429612),
	(12, 26, 2040, 0.00429612),
	(12, 26, 2050, 0.00429612),
	(12, 27, 2010, 0.141991),
	(12, 27, 2012, 0.148437),
	(12, 27, 2015, 0.154999),
	(12, 27, 2020, 0.15719),
	(12, 27, 2025, 0.156328),
	(12, 27, 2030, 0.153575),
	(12, 27, 2035, 0.157375),
	(12, 27, 2040, 0.157375),
	(12, 27, 2050, 0.157375),
	(13, 28, 2010, 0.0102882),
	(13, 28, 2012, 0.00962669),
	(13, 28, 2015, 0.00862762),
	(13, 28, 2020, 0.00762),
	(13, 28, 2025, 0.00677953),
	(13, 28, 2030, 0.00610118),
	(13, 28, 2035, 0.0055183),
	(13, 28, 2040, 0.0055183),
	(13, 28, 2050, 0.0055183),
	(13, 29, 2010, 0.167437),
	(13, 29, 2012, 0.167332),
	(13, 29, 2015, 0.168964),
	(13, 29, 2020, 0.172888),
	(13, 29, 2025, 0.171279),
	(13, 29, 2030, 0.169213),
	(13, 29, 2035, 0.171222),
	(13, 29, 2040, 0.171222),
	(13, 29, 2050, 0.171222),
	(13, 30, 2010, 0.0182485),
	(13, 30, 2012, 0.0181629),
	(13, 30, 2015, 0.0175309),
	(13, 30, 2020, 0.0145875),
	(13, 30, 2025, 0.0158657),
	(13, 30, 2030, 0.0171821),
	(13, 30, 2035, 0.0147783),
	(13, 30, 2040, 0.0147783),
	(13, 30, 2050, 0.0147783),
	(13, 31, 2010, 0.18836),
	(13, 31, 2012, 0.188243),
	(13, 31, 2015, 0.190078),
	(13, 31, 2020, 0.194493),
	(13, 31, 2025, 0.192683),
	(13, 31, 2030, 0.190358),
	(13, 31, 2035, 0.192618),
	(13, 31, 2040, 0.192618),
	(13, 31, 2050, 0.192618),
	(13, 32, 2010, 0.0609762),
	(13, 32, 2012, 0.0609382),
	(13, 32, 2015, 0.0615324),
	(13, 32, 2020, 0.0629615),
	(13, 32, 2025, 0.0623756),
	(13, 32, 2030, 0.0616231),
	(13, 32, 2035, 0.0623547),
	(13, 32, 2040, 0.0623547),
	(13, 32, 2050, 0.0623547),
	(13, 33, 2010, 0.0458963),
	(13, 33, 2012, 0.04457),
	(13, 33, 2015, 0.0422489),
	(13, 33, 2020, 0.0410134),
	(13, 33, 2025, 0.0401294),
	(13, 33, 2030, 0.0397164),
	(13, 33, 2035, 0.039505),
	(13, 33, 2040, 0.039505),
	(13, 33, 2050, 0.039505),
	(13, 35, 2010, 0.0162093),
	(13, 35, 2012, 0.0176033),
	(13, 35, 2015, 0.0191404),
	(13, 35, 2020, 0.0218643),
	(13, 35, 2025, 0.0252202),
	(13, 35, 2030, 0.0294262),
	(13, 35, 2035, 0.034506),
	(13, 35, 2040, 0.034506),
	(13, 35, 2050, 0.034506),
	(13, 36, 2010, 0.00944478),
	(13, 36, 2012, 0.00925248),
	(13, 36, 2015, 0.00888315),
	(13, 36, 2020, 0.00879945),
	(13, 36, 2025, 0.0087806),
	(13, 36, 2030, 0.00886265),
	(13, 36, 2035, 0.0089904),
	(13, 36, 2040, 0.0089904),
	(13, 36, 2050, 0.0089904),
	(13, 37, 2010, 0.0897257),
	(13, 37, 2012, 0.0896698),
	(13, 37, 2015, 0.0905441),
	(13, 37, 2020, 0.092647),
	(13, 37, 2025, 0.0917849),
	(13, 37, 2030, 0.0906775),
	(13, 37, 2035, 0.0917541),
	(13, 37, 2040, 0.0917541),
	(13, 37, 2050, 0.0917541),
	(13, 38, 2010, 0.0472064),
	(13, 38, 2012, 0.0469849),
	(13, 38, 2015, 0.0453501),
	(13, 38, 2020, 0.0377359),
	(13, 38, 2025, 0.0410426),
	(13, 38, 2030, 0.0444477),
	(13, 38, 2035, 0.0382295),
	(13, 38, 2040, 0.0382295),
	(13, 38, 2050, 0.0382295),
	(13, 39, 2010, 0.027539),
	(13, 39, 2012, 0.0269783),
	(13, 39, 2015, 0.0259015),
	(13, 39, 2020, 0.0256574),
	(13, 39, 2025, 0.0256024),
	(13, 39, 2030, 0.0258417),
	(13, 39, 2035, 0.0262142),
	(13, 39, 2040, 0.0262142),
	(13, 39, 2050, 0.0262142),
	(13, 40, 2010, 0.247361),
	(13, 40, 2012, 0.247207),
	(13, 40, 2015, 0.249617),
	(13, 40, 2020, 0.255414),
	(13, 40, 2025, 0.253038),
	(13, 40, 2030, 0.249985),
	(13, 40, 2035, 0.252953),
	(13, 40, 2040, 0.252953),
	(13, 40, 2050, 0.252953),
	(13, 41, 2010, 0.0351959),
	(13, 41, 2012, 0.0350307),
	(13, 41, 2015, 0.0338118),
	(13, 41, 2020, 0.0281349),
	(13, 41, 2025, 0.0306003),
	(13, 41, 2030, 0.0331391),
	(13, 41, 2035, 0.028503),
	(13, 41, 2040, 0.028503),
	(13, 41, 2050, 0.028503),
	(13, 42, 2010, 0.00157445),
	(13, 42, 2012, 0.00150373),
	(13, 42, 2015, 0.00138778),
	(13, 42, 2020, 0.00133395),
	(13, 42, 2025, 0.00130347),
	(13, 42, 2030, 0.00129137),
	(13, 42, 2035, 0.00129143),
	(13, 42, 2040, 0.00129143),
	(13, 42, 2050, 0.00129143),
	(13, 43, 2010, 0.0129614),
	(13, 43, 2012, 0.0153521),
	(13, 43, 2015, 0.0146626),
	(13, 43, 2020, 0.0126579),
	(13, 43, 2025, 0.0115258),
	(13, 43, 2030, 0.0103356),
	(13, 43, 2035, 0.00950375),
	(13, 43, 2040, 0.00950375),
	(13, 43, 2050, 0.00950375),
	(13, 44, 2010, 0.0215762),
	(13, 44, 2012, 0.0215451),
	(13, 44, 2015, 0.0217198),
	(13, 44, 2020, 0.0221912),
	(13, 44, 2025, 0.021989),
	(13, 44, 2030, 0.0217996),
	(13, 44, 2035, 0.0220584),
	(13, 44, 2040, 0.0220584),
	(13, 44, 2050, 0.0220584),
	(14, 28, 2010, 0.0102882),
	(14, 28, 2012, 0.00962669),
	(14, 28, 2015, 0.00862762),
	(14, 28, 2020, 0.00762),
	(14, 28, 2025, 0.00677953),
	(14, 28, 2030, 0.00610118),
	(14, 28, 2035, 0.0055183),
	(14, 28, 2040, 0.0055183),
	(14, 28, 2050, 0.0055183),
	(14, 29, 2010, 0.167437),
	(14, 29, 2012, 0.167332),
	(14, 29, 2015, 0.168964),
	(14, 29, 2020, 0.172888),
	(14, 29, 2025, 0.171279),
	(14, 29, 2030, 0.169213),
	(14, 29, 2035, 0.171222),
	(14, 29, 2040, 0.171222),
	(14, 29, 2050, 0.171222),
	(14, 30, 2010, 0.0182485),
	(14, 30, 2012, 0.0181629),
	(14, 30, 2015, 0.0175309),
	(14, 30, 2020, 0.0145875),
	(14, 30, 2025, 0.0158657),
	(14, 30, 2030, 0.0171821),
	(14, 30, 2035, 0.0147783),
	(14, 30, 2040, 0.0147783),
	(14, 30, 2050, 0.0147783),
	(14, 31, 2010, 0.18836),
	(14, 31, 2012, 0.188243),
	(14, 31, 2015, 0.190078),
	(14, 31, 2020, 0.194493),
	(14, 31, 2025, 0.192683),
	(14, 31, 2030, 0.190358),
	(14, 31, 2035, 0.192618),
	(14, 31, 2040, 0.192618),
	(14, 31, 2050, 0.192618),
	(14, 32, 2010, 0.0609762),
	(14, 32, 2012, 0.0609382),
	(14, 32, 2015, 0.0615324),
	(14, 32, 2020, 0.0629615),
	(14, 32, 2025, 0.0623756),
	(14, 32, 2030, 0.0616231),
	(14, 32, 2035, 0.0623547),
	(14, 32, 2040, 0.0623547),
	(14, 32, 2050, 0.0623547),
	(14, 33, 2010, 0.0458963),
	(14, 33, 2012, 0.04457),
	(14, 33, 2015, 0.0422489),
	(14, 33, 2020, 0.0410134),
	(14, 33, 2025, 0.0401294),
	(14, 33, 2030, 0.0397164),
	(14, 33, 2035, 0.039505),
	(14, 33, 2040, 0.039505),
	(14, 33, 2050, 0.039505),
	(14, 35, 2010, 0.0162093),
	(14, 35, 2012, 0.0176033),
	(14, 35, 2015, 0.0191404),
	(14, 35, 2020, 0.0218643),
	(14, 35, 2025, 0.0252202),
	(14, 35, 2030, 0.0294262),
	(14, 35, 2035, 0.034506),
	(14, 35, 2040, 0.034506),
	(14, 35, 2050, 0.034506),
	(14, 36, 2010, 0.00944478),
	(14, 36, 2012, 0.00925248),
	(14, 36, 2015, 0.00888315),
	(14, 36, 2020, 0.00879945),
	(14, 36, 2025, 0.0087806),
	(14, 36, 2030, 0.00886265),
	(14, 36, 2035, 0.0089904),
	(14, 36, 2040, 0.0089904),
	(14, 36, 2050, 0.0089904),
	(14, 37, 2010, 0.0897257),
	(14, 37, 2012, 0.0896698),
	(14, 37, 2015, 0.0905441),
	(14, 37, 2020, 0.092647),
	(14, 37, 2025, 0.0917849),
	(14, 37, 2030, 0.0906775),
	(14, 37, 2035, 0.0917541),
	(14, 37, 2040, 0.0917541),
	(14, 37, 2050, 0.0917541),
	(14, 38, 2010, 0.0472064),
	(14, 38, 2012, 0.0469849),
	(14, 38, 2015, 0.0453501),
	(14, 38, 2020, 0.0377359),
	(14, 38, 2025, 0.0410426),
	(14, 38, 2030, 0.0444477),
	(14, 38, 2035, 0.0382295),
	(14, 38, 2040, 0.0382295),
	(14, 38, 2050, 0.0382295),
	(14, 39, 2010, 0.027539),
	(14, 39, 2012, 0.0269783),
	(14, 39, 2015, 0.0259015),
	(14, 39, 2020, 0.0256574),
	(14, 39, 2025, 0.0256024),
	(14, 39, 2030, 0.0258417),
	(14, 39, 2035, 0.0262142),
	(14, 39, 2040, 0.0262142),
	(14, 39, 2050, 0.0262142),
	(14, 40, 2010, 0.247361),
	(14, 40, 2012, 0.247207),
	(14, 40, 2015, 0.249617),
	(14, 40, 2020, 0.255414),
	(14, 40, 2025, 0.253038),
	(14, 40, 2030, 0.249985),
	(14, 40, 2035, 0.252953),
	(14, 40, 2040, 0.252953),
	(14, 40, 2050, 0.252953),
	(14, 41, 2010, 0.0351959),
	(14, 41, 2012, 0.0350307),
	(14, 41, 2015, 0.0338118),
	(14, 41, 2020, 0.0281349),
	(14, 41, 2025, 0.0306003),
	(14, 41, 2030, 0.0331391),
	(14, 41, 2035, 0.028503),
	(14, 41, 2040, 0.028503),
	(14, 41, 2050, 0.028503),
	(14, 42, 2010, 0.00157445),
	(14, 42, 2012, 0.00150373),
	(14, 42, 2015, 0.00138778),
	(14, 42, 2020, 0.00133395),
	(14, 42, 2025, 0.00130347),
	(14, 42, 2030, 0.00129137),
	(14, 42, 2035, 0.00129143),
	(14, 42, 2040, 0.00129143),
	(14, 42, 2050, 0.00129143),
	(14, 43, 2010, 0.0129614),
	(14, 43, 2012, 0.0153521),
	(14, 43, 2015, 0.0146626),
	(14, 43, 2020, 0.0126579),
	(14, 43, 2025, 0.0115258),
	(14, 43, 2030, 0.0103356),
	(14, 43, 2035, 0.00950375),
	(14, 43, 2040, 0.00950375),
	(14, 43, 2050, 0.00950375),
	(14, 44, 2010, 0.0215762),
	(14, 44, 2012, 0.0215451),
	(14, 44, 2015, 0.0217198),
	(14, 44, 2020, 0.0221912),
	(14, 44, 2025, 0.021989),
	(14, 44, 2030, 0.0217996),
	(14, 44, 2035, 0.0220584),
	(14, 44, 2040, 0.0220584),
	(14, 44, 2050, 0.0220584),
	(15, 47, 2010, 0.830157),
	(15, 47, 2012, 0.830157),
	(15, 47, 2015, 0.830157),
	(15, 47, 2020, 0.830157),
	(15, 47, 2025, 0.830157),
	(15, 47, 2030, 0.830157),
	(15, 47, 2035, 0.830157),
	(15, 47, 2040, 0.830157),
	(15, 47, 2050, 0.830157),
	(15, 48, 2010, 0.169843),
	(15, 48, 2012, 0.169843),
	(15, 48, 2015, 0.169843),
	(15, 48, 2020, 0.169843),
	(15, 48, 2025, 0.169843),
	(15, 48, 2030, 0.169843),
	(15, 48, 2035, 0.169843),
	(15, 48, 2040, 0.169843),
	(15, 48, 2050, 0.169843);
GO


-- Add metadata for [emfac].[emfac_vehicle_map]
EXECUTE [db_meta].[add_xp] 'emfac.emfac_vehicle_map', 'SUBSYSTEM', 'EMFAC'
EXECUTE [db_meta].[add_xp] 'emfac.emfac_vehicle_map', 'MS_Description', ''
GO


-- Create fn_emfac_2011_vmt object
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[emfac].[fn_emfac_2011_vmt]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [emfac].[fn_emfac_2011_vmt]
GO

CREATE FUNCTION [emfac].[fn_emfac_2011_vmt]
(
	@SCENARIO_ID smallint, @GROUP_NUM int, @SEASON char(6)
)
RETURNS 
@TBL_EMFAC_2011_VMT TABLE 
(
	[Group] int NOT NULL
	,[Area] char(6) NOT NULL
	,[Scenario] int NOT NULL
	,[Sub-Area] char(14) NOT NULL
	,[CalYr] int NOT NULL
	,[Season] char(6) NOT NULL
	,[Title] varchar(60) NOT NULL
	,[Veh & Tech] varchar(40) NOT NULL
	,[New VMT] float NOT NULL
)
AS

-- =============================================
-- Author:		Clint Daniels
-- Create date: 8/6/2014
-- Description:	VMT function for emfac program
-- =============================================

BEGIN
	DECLARE @LOC_SCENARIO_ID int;
	DECLARE @LOC_GROUP_NUM int;
	DECLARE @LOC_SEASON char(6);
	DECLARE @BUS_PCE float = 3.0;
	
	SET @LOC_SCENARIO_ID = @SCENARIO_ID;
	SET @LOC_GROUP_NUM = @GROUP_NUM;
	SET @LOC_SEASON = @SEASON;
	
	INSERT INTO 
		@TBL_EMFAC_2011_VMT ([Group],[Area],[Scenario],[Sub-Area],[CalYr],[Season],[Title],[Veh & Tech],[New VMT])
	SELECT 
		@LOC_GROUP_NUM AS [Group]
		,'SANDAG' as [Area]
		,1 as [Scenario]
		,'San Diego (SD)' as [Sub-Area]
		,(SELECT CASE WHEN s.SCENARIO_YEAR > 2035 THEN 2035 ELSE s.SCENARIO_YEAR END FROM ref.scenario s WHERE SCENARIO_ID = @LOC_SCENARIO_ID) as [CalYr]
		,@LOC_SEASON as [Season]
		,'Group #1 (SANDAG), Scenario #1 - San Diego (SD) ' + cast((SELECT CASE WHEN s.SCENARIO_YEAR > 2035 THEN 2035 ELSE s.SCENARIO_YEAR END FROM ref.scenario s WHERE SCENARIO_ID = @LOC_SCENARIO_ID) as varchar(4)) + ' ' + @LOC_SEASON as [Title]
		,eclass.EMFAC_VEHICLE_CLASS as [Veh & Tech]
		,SUM(vmt.VMT * emap.VALUE) as [New VMT]
	FROM
		(SELECT
			SUM(CASE WHEN mode_id = 1 THEN l.flow * t.LENGTH_MILE ELSE 0 END) AS SOV_GP
			,SUM(CASE WHEN mode_id = 2 THEN l.flow * t.LENGTH_MILE ELSE 0 END) AS SOV_PAY
			,SUM(CASE WHEN mode_id = 3 THEN l.flow * t.LENGTH_MILE ELSE 0 END) AS SR2_GP
			,SUM(CASE WHEN mode_id = 4 THEN l.flow * t.LENGTH_MILE ELSE 0 END) AS SR2_HOV
			,SUM(CASE WHEN mode_id = 5 THEN l.flow * t.LENGTH_MILE ELSE 0 END) AS SR2_PAY
			,SUM(CASE WHEN mode_id = 6 THEN l.flow * t.LENGTH_MILE ELSE 0 END) AS SR3_GP
			,SUM(CASE WHEN mode_id = 7 THEN l.flow * t.LENGTH_MILE ELSE 0 END) AS SR3_HOV
			,SUM(CASE WHEN mode_id = 8 THEN l.flow * t.LENGTH_MILE ELSE 0 END) AS SR3_PAY
			,SUM(CASE WHEN mode_id = 32 THEN l.flow * t.LENGTH_MILE ELSE 0 END) AS LHDN
			,SUM(CASE WHEN mode_id = 33 THEN l.flow * t.LENGTH_MILE ELSE 0 END) AS LHDT
			,SUM(CASE WHEN mode_id = 34 THEN l.flow * t.LENGTH_MILE ELSE 0 END) AS MHDN
			,SUM(CASE WHEN mode_id = 35 THEN l.flow * t.LENGTH_MILE ELSE 0 END) AS MHDT
			,SUM(CASE WHEN mode_id = 36 THEN l.flow * t.LENGTH_MILE ELSE 0 END) AS HHDN
			,SUM(CASE WHEN mode_id = 37 THEN l.flow * t.LENGTH_MILE ELSE 0 END) AS HHDT
		FROM
			[abm].[hwy_flow_mode] l
		INNER JOIN
			[abm].[hwy_flow]
		ON
			l.[scenario_id] = [hwy_flow].[scenario_id]
			AND l.[hwy_flow_id] = [hwy_flow].[hwy_flow_id]
		INNER JOIN
			[abm].[hwy_link_ab_tod]
		ON
			[hwy_flow].[scenario_id] = [hwy_link_ab_tod].[scenario_id]
			AND [hwy_flow].[hwy_link_ab_tod_id] = [hwy_link_ab_tod].[hwy_link_ab_tod_id]
		INNER JOIN
			[abm].[hwy_link_ab]
		ON
			[hwy_link_ab_tod].[scenario_id] = [hwy_link_ab].[scenario_id]
			AND [hwy_link_ab_tod].[hwy_link_ab_id] = [hwy_link_ab].[hwy_link_ab_id]
		INNER JOIN 
			[abm].[hwy_link] t
		ON 
			[hwy_link_ab].[scenario_id] = t.[scenario_id]
			AND [hwy_link_ab].[hwy_link_id] = t.[hwy_link_id]
		WHERE
			l.[scenario_id] = @LOC_SCENARIO_ID
			AND [hwy_flow].[scenario_id] = @LOC_SCENARIO_ID
			AND [hwy_link_ab_tod].[scenario_id] = @LOC_SCENARIO_ID
			AND [hwy_link_ab].[scenario_id] = @LOC_SCENARIO_ID
			AND t.[scenario_id] = @LOC_SCENARIO_ID
		) AS vmt_source
	UNPIVOT (
		VMT for VEHICLE_CLASS in (SOV_GP, SOV_PAY,SR2_GP,SR2_HOV,SR2_PAY,SR3_GP,SR3_HOV,SR3_PAY,LHDN,LHDT,MHDN,MHDT,HHDN,HHDT)
		) AS vmt
	INNER JOIN 
		[emfac].[SANDAG_VEHICLE_CLASS] sclass 
	ON 
		vmt.VEHICLE_CLASS = sclass.SANDAG_VEHICLE_CLASS
	INNER JOIN 
		[emfac].[EMFAC_VEHICLE_MAP] emap 
	ON 
		sclass.SANDAG_VEHICLE_CLASS_ID = emap.SANDAG_VEHICLE_CLASS_ID 
		AND emap.YEAR IN (SELECT s.SCENARIO_YEAR FROM ref.scenario s WHERE SCENARIO_ID = @LOC_SCENARIO_ID)
	INNER JOIN 
		[emfac].[EMFAC_VEHICLE_CLASS] eclass 
	ON 
		emap.EMFAC_VEHICLE_CLASS_ID = eclass.EMFAC_VEHICLE_CLASS_ID
	GROUP BY 
		eclass.EMFAC_VEHICLE_CLASS
	UNION ALL
	SELECT
		@LOC_GROUP_NUM AS [Group]
		,'SANDAG' as [Area]
		,1 as [Scenario]
		,'San Diego (SD)' as [Sub-Area]
		,(SELECT CASE WHEN s.SCENARIO_YEAR > 2035 THEN 2035 ELSE s.SCENARIO_YEAR END FROM ref.scenario s WHERE SCENARIO_ID = @LOC_SCENARIO_ID) as [CalYr]
		,@LOC_SEASON as [Season]
		,'Group #1 (SANDAG), Scenario #1 - San Diego (SD) ' + cast((SELECT CASE WHEN s.SCENARIO_YEAR > 2035 THEN 2035 ELSE s.SCENARIO_YEAR END FROM ref.scenario s WHERE SCENARIO_ID = @LOC_SCENARIO_ID) as varchar(4)) + ' ' + @LOC_SEASON as [Title]
		,e.EMFAC_VEHICLE_CLASS as [Veh & Tech]
		,v.VMT as [New VMT]
	FROM (
		SELECT 
			v.EMFAC_VEHICLE_CLASS_ID
			,v.YEAR
			,SUM(v.VMT) as VMT 
		FROM 
			emfac.EMFAC_DEFAULT_SPEED_VMT v 
		GROUP BY 
			v.EMFAC_VEHICLE_CLASS_ID, v.YEAR
		) v
	INNER JOIN 
		emfac.EMFAC_VEHICLE_CLASS e 
	ON 
		v.EMFAC_VEHICLE_CLASS_ID = e.EMFAC_VEHICLE_CLASS_ID
	WHERE 
		v.YEAR IN (SELECT s.SCENARIO_YEAR FROM ref.scenario s WHERE SCENARIO_ID = @LOC_SCENARIO_ID)
	UNION ALL
	SELECT
		@LOC_GROUP_NUM AS [Group]
		,'SANDAG' as [Area]
		,1 as [Scenario]
		,'San Diego (SD)' as [Sub-Area]
		,(SELECT CASE WHEN s.SCENARIO_YEAR > 2035 THEN 2035 ELSE s.SCENARIO_YEAR END FROM ref.scenario s WHERE SCENARIO_ID = @LOC_SCENARIO_ID) as [CalYr]
		,@LOC_SEASON as [Season]
		,'Group #1 (SANDAG), Scenario #1 - San Diego (SD) ' + cast((SELECT CASE WHEN s.SCENARIO_YEAR > 2035 THEN 2035 ELSE s.SCENARIO_YEAR END FROM ref.scenario s WHERE SCENARIO_ID = @LOC_SCENARIO_ID) as varchar(4)) + ' ' + @LOC_SEASON as [Title]
		,eclass.EMFAC_VEHICLE_CLASS
		,SUM((PRELOAD / @BUS_PCE) * LENGTH_MILE) * emap.VALUE AS [NEW VMT]
	FROM
		(SELECT EMFAC_VEHICLE_CLASS_ID, VALUE FROM emfac.EMFAC_VEHICLE_MAP m WHERE m.SANDAG_VEHICLE_CLASS_ID = 15 AND m.YEAR IN (SELECT s.SCENARIO_YEAR FROM ref.scenario s WHERE SCENARIO_ID = @LOC_SCENARIO_ID)) emap
		JOIN emfac.EMFAC_VEHICLE_CLASS eclass ON emap.EMFAC_VEHICLE_CLASS_ID = eclass.EMFAC_VEHICLE_CLASS_ID
		,abm.hwy_link_ab_tod t
	INNER JOIN
		[abm].[hwy_link_ab]
	ON
		t.[scenario_id] = [hwy_link_ab].[scenario_id]
		AND t.[hwy_link_ab_id] = [hwy_link_ab].[hwy_link_ab_id]
	INNER JOIN
		[abm].[hwy_link]
	ON
		[hwy_link_ab].[scenario_id] = [hwy_link].[scenario_id]
		AND [hwy_link_ab].[hwy_link_id] = [hwy_link].[hwy_link_id]
	WHERE
		t.[scenario_id] = @LOC_SCENARIO_ID
		AND [hwy_link_ab].[scenario_id] = @LOC_SCENARIO_ID
		AND [hwy_link].[scenario_id] = @LOC_SCENARIO_ID
		AND PRELOAD > 0
	GROUP BY 
		eclass.EMFAC_VEHICLE_CLASS
		,emap.VALUE
	
	RETURN 
END
GO


-- Add metadata for [emfac].[fn_emfac_2011_vmt]
EXECUTE [db_meta].[add_xp] 'emfac.fn_emfac_2011_vmt', 'SUBSYSTEM', 'emfac'
EXECUTE [db_meta].[add_xp] 'emfac.fn_emfac_2011_vmt', 'MS_Description', ''
GO


-- Create fn_emfac_2011_vmt_speed object
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[emfac].[fn_emfac_2011_vmt_speed]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [emfac].[fn_emfac_2011_vmt_speed]
GO

CREATE FUNCTION [emfac].[fn_emfac_2011_vmt_speed]
(
	@SCENARIO_ID int, @GROUP_NUM int, @SEASON char(6)
)
RETURNS 
@TBL_EMFAC_2011_VMT_SPEED TABLE 
(
	[Group] int not null
    ,[Area] char(6) not null
    ,[Scenario] int not null
    ,[Sub-Area] char(15) not null
    ,[CalYr] int not null
    ,[Season] char(6) not null
    ,[Title] varchar(60) not null
	,[Veh & Tech] varchar(40) not null
	,[5MPH] float not null
	,[10MPH] float not null
	,[15MPH] float not null
	,[20MPH] float not null
	,[25MPH] float not null
	,[30MPH] float not null
	,[35MPH] float not null
	,[40MPH] float not null
	,[45MPH] float not null
	,[50MPH] float not null
	,[55MPH] float not null
	,[60MPH] float not null
	,[65MPH] float not null
	,[70MPH] float not null
)
AS

-- =============================================
-- Author:		Clint Daniels
-- Create date: 8/6/2014
-- Description:	VMT speed function for emfac program
-- =============================================

BEGIN
	--Declare and set local variables to circumvent "parameter snooping"
	DECLARE @LOC_SCENARIO_ID int;
	DECLARE @LOC_GROUP_NUM int;
	DECLARE @LOC_SEASON char(6);
	DECLARE @BUS_PCE as float = 3.0;
	
	SET @LOC_SCENARIO_ID = @SCENARIO_ID;
	SET @LOC_GROUP_NUM = @GROUP_NUM;
	SET @LOC_SEASON = @SEASON;
	
	--Establish the fact table CTE
	WITH EMFAC_VMT AS (  
		--Get the ABM assigned VMT by vehicle type and speed  
		SELECT
			eclass.EMFAC_VEHICLE_CLASS
			,SPEED_BIN
			,SUM(VMT * emap.VALUE) AS VMT
		FROM
		(
			SELECT
				SUM(CASE WHEN mode_id = 1 THEN l.flow * t.LENGTH_MILE ELSE 0 END) AS SOV_GP
				,SUM(CASE WHEN mode_id = 2 THEN l.flow * t.LENGTH_MILE ELSE 0 END) AS SOV_PAY
				,SUM(CASE WHEN mode_id = 3 THEN l.flow * t.LENGTH_MILE ELSE 0 END) AS SR2_GP
				,SUM(CASE WHEN mode_id = 4 THEN l.flow * t.LENGTH_MILE ELSE 0 END) AS SR2_HOV
				,SUM(CASE WHEN mode_id = 5 THEN l.flow * t.LENGTH_MILE ELSE 0 END) AS SR2_PAY
				,SUM(CASE WHEN mode_id = 6 THEN l.flow * t.LENGTH_MILE ELSE 0 END) AS SR3_GP
				,SUM(CASE WHEN mode_id = 7 THEN l.flow * t.LENGTH_MILE ELSE 0 END) AS SR3_HOV
				,SUM(CASE WHEN mode_id = 8 THEN l.flow * t.LENGTH_MILE ELSE 0 END) AS SR3_PAY
				,SUM(CASE WHEN mode_id = 32 THEN l.flow * t.LENGTH_MILE ELSE 0 END) AS LHDN
				,SUM(CASE WHEN mode_id = 33 THEN l.flow * t.LENGTH_MILE ELSE 0 END) AS LHDT
				,SUM(CASE WHEN mode_id = 34 THEN l.flow * t.LENGTH_MILE ELSE 0 END) AS MHDN
				,SUM(CASE WHEN mode_id = 35 THEN l.flow * t.LENGTH_MILE ELSE 0 END) AS MHDT
				,SUM(CASE WHEN mode_id = 36 THEN l.flow * t.LENGTH_MILE ELSE 0 END) AS HHDN
				,SUM(CASE WHEN mode_id = 37 THEN l.flow * t.LENGTH_MILE ELSE 0 END) AS HHDT
				,CEILING(f.SPEED / 5) * 5 SPEED_BIN
			FROM
				[abm].[hwy_flow_mode] l
			INNER JOIN
				[abm].[hwy_flow] f
			ON
				l.[scenario_id] = f.[scenario_id]
				AND l.[hwy_flow_id] = f.[hwy_flow_id]
			INNER JOIN
				[abm].[hwy_link_ab_tod]
			ON
				f.[scenario_id] = [hwy_link_ab_tod].[scenario_id]
				AND f.[hwy_link_ab_tod_id] = [hwy_link_ab_tod].[hwy_link_ab_tod_id]
			INNER JOIN
				[abm].[hwy_link_ab]
			ON
				[hwy_link_ab_tod].[scenario_id] = [hwy_link_ab].[scenario_id]
				AND [hwy_link_ab_tod].[hwy_link_ab_id] = [hwy_link_ab].[hwy_link_ab_id]
			INNER JOIN 
				[abm].[hwy_link] t
			ON 
				[hwy_link_ab].[scenario_id] = t.[scenario_id]
				AND [hwy_link_ab].[hwy_link_id] = t.[hwy_link_id]
			WHERE
				l.[scenario_id] = @LOC_SCENARIO_ID
				AND f.[scenario_id] = @LOC_SCENARIO_ID
				AND [hwy_link_ab_tod].[scenario_id] = @LOC_SCENARIO_ID
				AND [hwy_link_ab].[scenario_id] = @LOC_SCENARIO_ID
				and t.[scenario_id] = @LOC_SCENARIO_ID
				
			GROUP BY 
				CEILING(f.SPEED / 5) * 5
		) as source_table
			UNPIVOT
			(VMT for VEHICLE_CLASS in (SOV_GP, SOV_PAY,SR2_GP,SR2_HOV,SR2_PAY,SR3_GP,SR3_HOV,SR3_PAY,LHDN,LHDT,MHDN,MHDT,HHDN,HHDT)) as vmt_speed
			JOIN emfac.SANDAG_VEHICLE_CLASS sclass ON vmt_speed.VEHICLE_CLASS = sclass.SANDAG_VEHICLE_CLASS
			JOIN emfac.EMFAC_VEHICLE_MAP emap ON sclass.SANDAG_VEHICLE_CLASS_ID = emap.SANDAG_VEHICLE_CLASS_ID AND emap.YEAR IN (SELECT s.SCENARIO_YEAR FROM ref.SCENARIO s WHERE SCENARIO_ID = @LOC_SCENARIO_ID)
			JOIN emfac.EMFAC_VEHICLE_CLASS eclass ON emap.EMFAC_VEHICLE_CLASS_ID = eclass.EMFAC_VEHICLE_CLASS_ID
		GROUP BY eclass.EMFAC_VEHICLE_CLASS, vmt_speed.SPEED_BIN
	UNION ALL
		--Add the Preload (Transit Bus) VMT by Speed
		SELECT
			eclass.EMFAC_VEHICLE_CLASS
			,CEILING(f.SPEED / 5) * 5 AS SPEED_BIN
			,SUM((l.PRELOAD / @BUS_PCE) * t.LENGTH_MILE) * emap.VALUE AS VMT
		FROM
			(SELECT EMFAC_VEHICLE_CLASS_ID, VALUE FROM emfac.EMFAC_VEHICLE_MAP m WHERE m.SANDAG_VEHICLE_CLASS_ID = 15 AND m.YEAR IN (SELECT s.SCENARIO_YEAR FROM ref.SCENARIO s WHERE SCENARIO_ID = @LOC_SCENARIO_ID)) as emap
				JOIN emfac.EMFAC_VEHICLE_CLASS eclass on emap.EMFAC_VEHICLE_CLASS_ID = eclass.EMFAC_VEHICLE_CLASS_ID
			,[abm].[hwy_link] AS t
		INNER JOIN
			[abm].[hwy_link_ab]
		ON
			t.[scenario_id] = [hwy_link_ab].[scenario_id]
			AND t.[hwy_link_id] = [hwy_link_ab].[hwy_link_id]
		INNER JOIN 
			[abm].[hwy_link_ab_tod] l 
		ON 
			[hwy_link_ab].[scenario_id] = l.[scenario_id] 
			AND [hwy_link_ab].[hwy_link_ab_id] = l.[hwy_link_ab_id]
		INNER JOIN 
			[abm].[hwy_flow] f 
		ON 
			l.[scenario_id] = f.[scenario_id] 
			AND l.[hwy_link_ab_tod_id] = f.hwy_link_ab_tod_id
		WHERE 
			l.PRELOAD > 0
			AND t.[scenario_id] = @LOC_SCENARIO_ID
			AND [hwy_link_ab].[scenario_id] = @LOC_SCENARIO_ID
			AND l.[scenario_id] = @LOC_SCENARIO_ID
			AND f.[scenario_id] = @LOC_SCENARIO_ID
		GROUP BY
			eclass.EMFAC_VEHICLE_CLASS, emap.VALUE, CEILING(f.SPEED / 5) * 5
	UNION ALL
		--Add the non-assigned classes (e.g., school bus) VMT by speed 
		SELECT
			eclass.EMFAC_VEHICLE_CLASS
			,v.SPEED_BIN
			,v.VMT
		FROM
			emfac.EMFAC_DEFAULT_SPEED_VMT v
				JOIN emfac.EMFAC_VEHICLE_CLASS eclass ON v.EMFAC_VEHICLE_CLASS_ID = eclass.EMFAC_VEHICLE_CLASS_ID
		WHERE
			v.YEAR IN (SELECT s.SCENARIO_YEAR FROM ref.SCENARIO s WHERE s.SCENARIO_ID = @LOC_SCENARIO_ID)
	)

	INSERT INTO @TBL_EMFAC_2011_VMT_SPEED
	--Pivot CTE from horizontally
	SELECT
		@LOC_GROUP_NUM AS [Group]
		,'SANDAG' AS [Area]
		,1 AS [Scenario]
		,'San Diego (SD)' AS [Sub-Area]
		,(SELECT CASE WHEN s.SCENARIO_YEAR > 2035 THEN 2035 ELSE s.SCENARIO_YEAR END FROM ref.SCENARIO s WHERE SCENARIO_ID = @LOC_SCENARIO_ID) as [CalYr]
		,@LOC_SEASON AS [Season]
		,'Group #1 (SANDAG), Scenario #1 - San Diego (SD) ' + cast((SELECT CASE WHEN s.SCENARIO_YEAR > 2035 THEN 2035 ELSE s.SCENARIO_YEAR END FROM ref.SCENARIO s WHERE SCENARIO_ID = @LOC_SCENARIO_ID) as varchar(4)) + ' ' + @LOC_SEASON as [Title]
		,EMFAC_VEHICLE_CLASS AS [Veh & Tech]
		,ISNULL([5],0) AS [5MPH]
		,ISNULL([10],0) AS [10MPH]
		,ISNULL([15],0) AS [15MPH]
		,ISNULL([20],0) AS [20MPH]
		,ISNULL([25],0) AS [25MPH]
		,ISNULL([30],0) AS [30MPH]
		,ISNULL([35],0) AS [35MPH]
		,ISNULL([40],0) AS [40MPH]
		,ISNULL([45],0) AS [45MPH]
		,ISNULL([50],0) AS [50MPH]
		,ISNULL([55],0) AS [55MPH]
		,ISNULL([60],0) AS [60MPH]
		,ISNULL([65],0) AS [65MPH]
		,ISNULL([70],0) + ISNULL([75],0) + ISNULL([80],0) + ISNULL([0],0) AS [70MPH]
	FROM
	(
		SELECT
			EMFAC_VEHICLE_CLASS
			,SPEED_BIN
			,VMT / SUM(VMT) OVER (PARTITION BY EMFAC_VEHICLE_CLASS) AS CLASS_VMT_PCT
		FROM
			EMFAC_VMT
	) as vmt_bin
	PIVOT
		(SUM(CLASS_VMT_PCT) FOR SPEED_BIN IN ([0], [5], [10], [15],[20],[25],[30],[35],[40],[45],[50],[55],[60],[65],[70],[75],[80])) as pvmt
	
	RETURN 
END
GO


-- Add metadata for [emfac].[fn_emfac_2011_vmt_speed]
EXECUTE [db_meta].[add_xp] 'emfac.fn_emfac_2011_vmt_speed', 'SUBSYSTEM', 'emfac'
EXECUTE [db_meta].[add_xp] 'emfac.fn_emfac_2011_vmt_speed', 'MS_Description', ''
GO
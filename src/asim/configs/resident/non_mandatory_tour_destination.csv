Description,Expression,escort,shopping,eatout,othmaint,social,othdiscr
,_DIST@skims['DIST'],1,1,1,1,1,1
Distance,"@_DIST.clip(0,20)",coef_dist_escort,coef_dist_shopping,coef_dist_eatout,coef_dist_maint,coef_dist_social,coef_dist_discr
Distance_squared,"@_DIST.clip(0,20)**2",coef_distsqrd_escort,coef_distsqrd_shopping,coef_distsqrd_eatout,coef_distsqrd_maint,coef_distsqrd_social,coef_distsqrd_discr
Distance_cubed,"@_DIST.clip(0,20)**3",coef_zero,coef_distcubed_shopping,coef_distcubed_eatout,coef_zero,coef_distcubed_social,coef_distcubed_discr
Distance_logged,"@np.log(_DIST.clip(0,20) + 0.001)",coef_zero,coef_distlogged_shopping,coef_distlogged_eatout,coef_zero,coef_distlogged_social,coef_distlogged_discr
Distance_female,"@_DIST.clip(0,20) * df.female * np.where(df.get('tour_category', default=False) == 'joint', 0, 1)",coef_zero,coef_distfemale_shopping,coef_zero,coef_zero,coef_zero,coef_distfemale_disc
Distance - low income_segment_escort,"@_DIST.clip(0,20) * (df.income < 30000)",coef_distlowinc_escort,coef_zero,coef_zero,coef_zero,coef_zero,coef_zero
Distance - low income_segment_maint,"@_DIST.clip(0,20) * (df.income_segment <= 2)",coef_zero,coef_zero,coef_zero,coef_distlowinc_maint,coef_distlowinc_social,coef_zero
Distance - lowmed income_segment_maint,"@_DIST.clip(0,20) * (df.income_segment <= 3)",coef_zero,coef_zero,coef_zero,coef_zero,coef_distmidlowinc_social,coef_zero
#Distance - Time Pressure calculated as the log of the maxtime over tours left,"@_DIST.clip(0,20) * np.log((person_max_window(persons)/(df.tour_type_count - df.tour_type_num + 1))+0.0001)",coef_zero,coef_disttimepressure_shopping,coef_disttimepressure_eatout,coef_disttimepressure_maint,coef_zero,coef_disttimepressure_disc
#Accessibility,@@nonMandatoryAccessibilityAlt,coef_zero,coef_accessibility_shopping,coef_zero,coef_zero,coef_zero,coef_zero
Distance - age 16 to 24,"@_DIST.clip(0,20) * df.age.between(16, 24) * np.where(df.get('tour_category', default=False) == 'joint', 0, 1)",coef_zero,coef_zero,coef_zero,coef_distage1624_maint,coef_zero,coef_zero
Distance - age 56 to 64,"@_DIST.clip(0,20) * (df.age.between(56, 64))",coef_distage5664_escort,coef_zero,coef_zero,coef_zero,coef_zero,coef_zero
Distance - age 65+,"@_DIST.clip(0,20) * (df.age > 64)",coef_distage64plus_escort,coef_zero,coef_zero,coef_zero,coef_zero,coef_zero
#escort size is zero for escort tour,@(@@householdsDestAlt * 1 + df.num_young_children * @@householdsDestAlt * 1 + df.num_gradeschool * @@gradeSchoolEnrollmentDestAlt * 100 + df.numHighSchoolStudents * @@highSchoolEnrollmentDestAlt * 100) == 0,-999,coef_zero,coef_zero,coef_zero,coef_zero,coef_zero
#escort size is non-zero for escort tour,"@np.where(@@householdsDestAlt * 1 + df.num_young_children * @@householdsDestAlt * 1 + df.num_gradeschool * @@gradeSchoolEnrollmentDestAlt * 100 + df.numHighSchoolStudents * @@highSchoolEnrollmentDestAlt * 100 > 0, np.log(@@householdsDestAlt * 1 + df.num_y",1,coef_zero,coef_zero,coef_zero,coef_zero,coef_zero
Size variable,@df['size_term'].apply(np.log1p),1,1,1,1,1,1
No attractions,@df['size_term']==0,-999,-999,-999,-999,-999,-999
Mode choice logsum,mode_choice_logsum,coef_mode_logsum,coef_mode_logsum,coef_mode_logsum,coef_mode_logsum,coef_mode_logsum_socdisc,coef_mode_logsum_socdisc
Sample of alternatives correction factor,"@np.minimum(np.log(df.pick_count/df.prob), 60)",1,1,1,1,1,1
#Calibration constants,,,,,,,
ABM2 calibration - 0-1 miles_ABM2+ calibration - 0-1 miles,@(_DIST < 1),coef_ABM2_calibration_0_1_miles_escort,,,,,
ABM2 calibration - 1-2 miles_ABM2+ calibration - 1-2 miles,@(_DIST < 2) * (_DIST >= 1),coef_ABM2_calibration_1_2_miles_escort,,,,,
ABM2 calibration - 0-20 miles,@(_DIST < 20) * _DIST,coef_ABM2_calibration_0_20_miles_escort,,,,,
ABM2+ calibration - distance logged,"@(_DIST < 20) * np.minimum(np.log(_DIST+0.001), np.log(20))",coef_ABM2v1_calibration_distance_logged_escort,,,,,
ABM2 calibration - 2-3 miles_ABM2+ calibration - 2-3 miles,@(_DIST < 3) * (_DIST >= 2),coef_ABM2_calibration_2_3_miles_escort,,,,,
ABM2 calibration - 3-4 miles_ABM2+ calibration - 3-4 miles,@(_DIST < 4) * (_DIST >= 3),coef_ABM2_calibration_3_4_miles_escort,,,,,
ABM2 calibration - 4-5 miles,@(_DIST < 5) * (_DIST >= 4),coef_ABM2_calibration_4_5_miles_escort,,,,,
ABM2 calibration - distance,"@_DIST.clip(0,20)",coef_ABM2_calibration_distance_escort,,,,,
ABM2 calibration - distance squared,"@_DIST.clip(0,20)**2",coef_ABM2_calibration_distance_squared_escort,,,,,
ABM2 calibration - distance cubed,"@_DIST.clip(0,20)**3",coef_ABM2_calibration_distance_cubed_escort,,,,,
Calibration - Distance_squared,"@np.minimum(_DIST**2, 20**2)",coef_Calibration_Distance_squared_escort,,,,,
Calibration - Distance_cubed,"@np.minimum(_DIST**3, 20**3)",coef_Calibration_Distance_cubed_escort,,,,,
Calibration - Distance,"@np.minimum(_DIST, 20)",coef_Calibration_Distance_escort,,,,,
Calibration - Distance_logged_ABM2 calibration - distance logged,"@np.minimum(np.log(_DIST+0.001), np.log(20))",coef_Calibration_Distance_logged_escort,,,,,
#,,,,,,,
ABM2 calibration - 0-1 miles,"@np.where(df.get('tour_category', default=False) == 'joint', 1, 0) * (_DIST<1)",,coef_ABM2_calibration_0_1_miles_joint_shopping,,,,
ABM2 calibration - 2-3 miles,"@np.where(df.get('tour_category', default=False) == 'joint', 1, 0) * (_DIST>=2) * (_DIST<3)",,coef_ABM2_calibration_2_3_miles_joint_shopping,,,,
ABM2 calibration - 1-2 miles,"@np.where(df.get('tour_category', default=False) == 'joint', 1, 0) * (_DIST>=1) * (_DIST<2)",,coef_ABM2_calibration_1_2_miles_joint_shopping,,,,
ABM2 calibration - 0-1 miles_ABM2+ calibration - 0-1 miles,@(_DIST < 1),,coef_ABM2_calibration_0_1_miles_shopping,,,,
ABM2+ calibration - 1-2 miles,@(_DIST < 2) * (_DIST >= 1),,coef_ABM2v1_calibration_1_2_miles_shopping,,,,
ABM2 calibration - 1-2 miles,"@(_DIST < 2) * (_DIST >= 1) * np.where(df.get('tour_category', default=False) == 'joint', 0, 1)",,coef_ABM2_calibration_1_2_miles_shopping,,,,
ABM2 calibration - 0-20 miles,@(_DIST < 20) * _DIST,,coef_ABM2_calibration_0_20_miles_shopping,,,,
ABM2+ calibration - 2-3 miles,@(_DIST < 3) * (_DIST >= 2),,coef_ABM2v1_calibration_2_3_miles_shopping,,,,
ABM2 calibration - 2-3 miles,"@(_DIST < 3) * (_DIST >= 2) * np.where(df.get('tour_category', default=False) == 'joint', 0, 1)",,coef_ABM2_calibration_2_3_miles_shopping,,,,
ABM2 calibration - 3-4 miles_ABM2+ calibration - 3-4 miles,@(_DIST < 4) * (_DIST >= 3),,coef_ABM2_calibration_3_4_miles_shopping,,,,
ABM2 calibration - 4-5 miles,@(_DIST < 5) * (_DIST >= 4),,coef_ABM2_calibration_4_5_miles_shopping,,,,
ABM2 calibration - 5-6 miles,@(_DIST < 6) * (_DIST >= 5),,coef_ABM2_calibration_5_6_miles_shopping,,,,
ABM2 calibration - 6-7 miles,@(_DIST < 7) * (_DIST >= 6),,coef_ABM2_calibration_6_7_miles_shopping,,,,
Calibration - 0-1 miles,@(_DIST<1),,coef_Calibration_0_1_miles_shopping,,,,
Calibration - 1-2 miles,@(_DIST>=1) * (_DIST<2),,coef_Calibration_1_2_miles_shopping,,,,
Calibration - 2-5 miles,@(_DIST>=2) * (_DIST<5),,coef_Calibration_2_5_miles_shopping,,,,
ABM2 calibration - distance,"@_DIST.clip(0,20)",,coef_ABM2_calibration_distance_shopping,,,,
ABM2 calibration - distance squared,"@_DIST.clip(0,20)**2",,coef_ABM2_calibration_distance_squared_shopping,,,,
ABM2 calibration - distance cubed,"@_DIST.clip(0,20)**3",,coef_ABM2_calibration_distance_cubed_shopping,,,,
#Mission Valley Mall Constant,@df.destination==6187,,coef_Mission_Valley_Mall_Constant_shopping_6187,,,,
#Mission Valley Mall Constant,@df.destination==6196,,coef_Mission_Valley_Mall_Constant_shopping_6196,,,,
Calibration - Distance_squared,"@np.minimum(_DIST**2, 10**2)",,coef_Calibration_Distance_squared_shopping,,,,
Calibration - Distance_cubed,"@np.minimum(_DIST**3, 10**3)",,coef_Calibration_Distance_cubed_shopping,,,,
Calibration - Distance,"@np.minimum(_DIST, 10)",,coef_Calibration_Distance_shopping,,,,
Calibration - Distance_logged,"@np.minimum(np.log(_DIST+0.001), np.log(10)) ",,coef_Calibration_Distance_logged_shopping,,,,
ABM2 calibration - distance logged,"@np.minimum(np.log(_DIST+0.001), np.log(10)) * np.where(df.get('tour_category', default=False) == 'joint', 0, 1)",,coef_ABM2_calibration_distance_logged_shopping,,,,
#,,,,,,,
ABM2 calibration - 1-2 miles,"@np.where(df.get('tour_category', default=False) == 'joint', 1, 0) * (_DIST>=1) * (_DIST<2)",,,coef_ABM2_calibration_1_2_miles_joint_eatout,,,
ABM2 calibration - 0-1 miles,"@np.where(df.get('tour_category', default=False) == 'joint', 1, 0) * (_DIST<1)",,,coef_ABM2_calibration_0_1_miles_joint_eatout,,,
ABM2 calibration - 0-1 miles_ABM2+ calibration - 0-1 miles,@(_DIST < 1),,,coef_ABM2_calibration_0_1_miles_eatout,,,
ABM2 calibration - 1-2 miles_ABM2+ calibration - 1-2 miles,@(_DIST < 2) * (_DIST >= 1),,,coef_ABM2_calibration_1_2_miles_eatout,,,
ABM2 calibration - 2-3 miles_ABM2+ calibration - 2-3 miles,@(_DIST < 3) * (_DIST >= 2),,,coef_ABM2_calibration_2_3_miles_eatout,,,
ABM2 calibration - 3-4 miles_ABM2+ calibration - 3-4 miles,@(_DIST < 4) * (_DIST >= 3),,,coef_ABM2_calibration_3_4_miles_eatout,,,
ABM2 calibration - 4-5 miles,@(_DIST < 5) * (_DIST >= 4),,,coef_ABM2_calibration_4_5_miles_eatout,,,
ABM2 calibration - 0-5 miles,@(_DIST < 5) * _DIST,,,coef_ABM2_calibration_0_5_miles_eatout,,,
Calibration - 0-1 miles,@(_DIST<1),,,coef_Calibration_0_1_miles_eatout,,,
ABM2 calibration - distance,"@_DIST.clip(0,20)",,,coef_ABM2_calibration_distance_eatout,,,
ABM2 calibration - distance squared,"@_DIST.clip(0,20)**2",,,coef_ABM2_calibration_distance_squared_eatout,,,
ABM2 calibration - distance cubed,"@_DIST.clip(0,20)**3",,,coef_ABM2_calibration_distance_cubed_eatout,,,
Calibration - Distance_squared,"@np.minimum(_DIST**2, 10**2)",,,coef_Calibration_Distance_squared_eatout,,,
Calibration - Distance_cubed,"@np.minimum(_DIST**3, 10**3)",,,coef_Calibration_Distance_cubed_eatout,,,
Calibration - Distance,"@np.minimum(_DIST, 10)",,,coef_Calibration_Distance_eatout,,,
ABM2 calibration - distance logged,"@np.minimum(np.log(_DIST+0.001), np.log(10))",,,coef_ABM2_calibration_distance_logged_eatout,,,
Calibration - Distance_logged,"@np.minimum(np.log(_DIST+0.001), np.log(10)) ",,,coef_Calibration_Distance_logged_eatout,,,
#,,,,,,,
ABM2 calibration - 0-1 miles,"@np.where(df.get('tour_category', default=False) == 'joint', 1, 0) * (_DIST<1)",,,,coef_ABM2_calibration_0_1_miles_joint_maint,,
ABM2 calibration - 2-3 miles,"@np.where(df.get('tour_category', default=False) == 'joint', 1, 0) * (_DIST>=2) * (_DIST<3)",,,,coef_ABM2_calibration_2_3_miles_joint_maint,,
ABM2 calibration - 1-2 miles,"@np.where(df.get('tour_category', default=False) == 'joint', 1, 0)* (_DIST>=1) * (_DIST<2)",,,,coef_ABM2_calibration_1_2_miles_joint_maint,,
ABM2 calibration - 0-1 miles_ABM2+ calibration - 0-1 miles,@(_DIST < 1),,,,coef_ABM2_calibration_0_1_miles_maint,,
ABM2+ calibration - 1-2 miles,@(_DIST < 2) * (_DIST >= 1),,,,coef_ABM2v1_calibration_1_2_miles_maint,,
ABM2 calibration - 1-2 miles,"@(_DIST < 2) * (_DIST >= 1) * np.where(df.get('tour_category', default=False) == 'joint', 0, 1)",,,,coef_ABM2_calibration_1_2_miles_maint,,
ABM2 calibration - 0-20 miles,@(_DIST < 20) * _DIST,,,,coef_ABM2_calibration_0_20_miles_maint,,
ABM2+ calibration - 2-3 miles,@(_DIST < 3) * (_DIST >= 2),,,,coef_ABM2v1_calibration_2_3_miles_maint,,
ABM2 calibration - 2-3 miles,"@(_DIST < 3) * (_DIST >= 2) * np.where(df.get('tour_category', default=False) == 'joint', 0, 1)",,,,coef_ABM2_calibration_2_3_miles_maint,,
ABM2 calibration - 3-4 miles_ABM2+ calibration - 3-4 miles,@(_DIST < 4) * (_DIST >= 3),,,,coef_ABM2_calibration_3_4_miles_maint,,
ABM2 calibration - 4-5 miles,@(_DIST < 5) * (_DIST >= 4),,,,coef_ABM2_calibration_4_5_miles_maint,,
ABM2 calibration - 5-6 miles,@(_DIST < 6) * (_DIST >= 5),,,,coef_ABM2_calibration_5_6_miles_maint,,
ABM2 calibration - 6-7 miles,@(_DIST < 7) * (_DIST >= 6),,,,coef_ABM2_calibration_6_7_miles_maint,,
Calibration - 0-1 miles,@(_DIST<1),,,,coef_Calibration_0_1_miles_maint,,
Calibration - 1-2 miles,@(_DIST>=1) * (_DIST<2),,,,coef_Calibration_1_2_miles_maint,,
Calibration - 2-5 miles,@(_DIST>=2) * (_DIST<5),,,,coef_Calibration_2_5_miles_maint,,
ABM2 calibration - distance,"@_DIST.clip(0,20)",,,,coef_ABM2_calibration_distance_maint,,
ABM2 calibration - distance squared,"@_DIST.clip(0,20)**2",,,,coef_ABM2_calibration_distance_squared_maint,,
ABM2 calibration - distance cubed,"@_DIST.clip(0,20)**3",,,,coef_ABM2_calibration_distance_cubed_maint,,
Calibration - Distance_squared,"@np.minimum(_DIST**2, 8**2)",,,,coef_Calibration_Distance_squared_maint,,
Calibration - Distance_cubed,"@np.minimum(_DIST**3, 8**3)",,,,coef_Calibration_Distance_cubed_maint,,
Calibration - Distance,"@np.minimum(_DIST, 8)",,,,coef_Calibration_Distance_maint,,
Calibration - Distance_logged,"@np.minimum(np.log(_DIST+0.001), np.log(8)) ",,,,coef_Calibration_Distance_logged_maint,,
ABM2 calibration - distance logged,"@np.minimum(np.log(_DIST+0.001), np.log(8)) * np.where(df.get('tour_category', default=False) == 'joint', 0, 1)",,,,coef_ABM2_calibration_distance_logged_maint,,
#,,,,,,,
ABM2 calibration - 0-1 miles,"@np.where(df.get('tour_category', default=False) == 'joint', 1, 0) * (_DIST<1)",,,,,coef_ABM2_calibration_0_1_miles_joint_social,
ABM2 calibration - 1-2 miles,"@np.where(df.get('tour_category', default=False) == 'joint', 1, 0) * (_DIST>=1) * (_DIST<2)",,,,,coef_ABM2_calibration_1_2_miles_joint_social,
ABM2 calibration - 0-1 miles_ABM2+ calibration - 0-1 miles,@(_DIST < 1),,,,,coef_ABM2_calibration_0_1_miles_social,
ABM2 calibration - 1-2 miles_ABM2+ calibration - 1-2 miles,@(_DIST < 2) * (_DIST >= 1),,,,,coef_ABM2_calibration_1_2_miles_social,
ABM2 calibration - 2-3 miles_ABM2+ calibration - 2-3 miles,@(_DIST < 3) * (_DIST >= 2),,,,,coef_ABM2_calibration_2_3_miles_social,
ABM2 calibration - 3-4 miles_ABM2+ calibration - 3-4 miles,@(_DIST < 4) * (_DIST >= 3),,,,,coef_ABM2_calibration_3_4_miles_social,
ABM2 calibration - 4-5 miles,@(_DIST < 5) * (_DIST >= 4),,,,,coef_ABM2_calibration_4_5_miles_social,
ABM2 calibration - 0-5 miles,@(_DIST < 5) * _DIST,,,,,coef_ABM2_calibration_0_5_miles_social,
Calibration - 0-1 miles,@(_DIST<1),,,,,coef_Calibration_0_1_miles_social,
Calibration - 1-2 miles,@(_DIST>=1) * (_DIST<2),,,,,coef_Calibration_1_2_miles_social,
ABM2 calibration - distance,"@_DIST.clip(0,20)",,,,,coef_ABM2_calibration_distance_social,
ABM2 calibration - distance squared,"@_DIST.clip(0,20)**2",,,,,coef_ABM2_calibration_distance_squared_social,
ABM2 calibration - distance cubed,"@_DIST.clip(0,20)**3",,,,,coef_ABM2_calibration_distance_cubed_social,
Calibration - Distance_squared,"@np.minimum(_DIST**2, 10**2)",,,,,coef_Calibration_Distance_squared_social,
Calibration - Distance_cubed,"@np.minimum(_DIST**3, 10**3)",,,,,coef_Calibration_Distance_cubed_social,
Calibration - Distance,"@np.minimum(_DIST, 10)",,,,,coef_Calibration_Distance_social,
ABM2 calibration - distance logged,"@np.minimum(np.log(_DIST+0.001), np.log(10))",,,,,coef_ABM2_calibration_distance_logged_social,
Calibration - Distance_logged,"@np.minimum(np.log(_DIST+0.001), np.log(10)) ",,,,,coef_Calibration_Distance_logged_social,
#,,,,,,,
coef_Distance_Calibration_adjustment_disc,"@(_DIST.clip(0,20))",,,,,,coef_Distance_Calibration_adjustment_disc
ABM2 calibration - 0-1 miles,"@np.where(df.get('tour_category', default=False) == 'joint', 1, 0)* (_DIST<1)",,,,,,coef_ABM2_calibration_0_1_miles_joint_disc
ABM2 calibration - 1-2 miles,"@np.where(df.get('tour_category', default=False) == 'joint', 1, 0) * (_DIST>=1) * (_DIST<2)",,,,,,coef_ABM2_calibration_1_2_miles_joint_disc
ABM2 calibration - 0-1 miles_ABM2+ calibration - 0-1 miles,@(_DIST < 1),,,,,,coef_ABM2_calibration_0_1_miles_disc
ABM2 calibration - 1-2 miles_ABM2+ calibration - 1-2 miles,@(_DIST < 2) * (_DIST >= 1),,,,,,coef_ABM2_calibration_1_2_miles_disc
ABM2 calibration - 2-3 miles_ABM2+ calibration - 2-3 miles,@(_DIST < 3) * (_DIST >= 2),,,,,,coef_ABM2_calibration_2_3_miles_disc
ABM2 calibration - 3-4 miles_ABM2+ calibration - 3-4 miles,@(_DIST < 4) * (_DIST >= 3),,,,,,coef_ABM2_calibration_3_4_miles_disc
ABM2 calibration - 4-5 miles,@(_DIST < 5) * (_DIST >= 4),,,,,,coef_ABM2_calibration_4_5_miles_disc
ABM2 calibration - 0-5 miles,@(_DIST < 5) * _DIST,,,,,,coef_ABM2_calibration_0_5_miles_disc
ABM2 calibration - distance,"@_DIST.clip(0,20)",,,,,,coef_ABM2_calibration_distance_disc
ABM2 calibration - distance squared,"@_DIST.clip(0,20)**2",,,,,,coef_ABM2_calibration_distance_squared_disc
ABM2 calibration - distance cubed,"@_DIST.clip(0,20)**3",,,,,,coef_ABM2_calibration_distance_cubed_disc
Calibration - Distance_squared,"@np.minimum(_DIST**2, 10**2)",,,,,,coef_Calibration_Distance_squared_disc
Calibration - Distance_cubed,"@np.minimum(_DIST**3, 10**3)",,,,,,coef_Calibration_Distance_cubed_disc
Calibration - Distance,"@np.minimum(_DIST, 10)",,,,,,coef_Calibration_Distance_disc
ABM2 calibration - distance logged,"@np.minimum(np.log(_DIST+0.001), np.log(10))",,,,,,coef_ABM2_calibration_distance_logged_disc
Calibration - Distance_logged,"@np.minimum(np.log(_DIST+0.001), np.log(10)) ",,,,,,coef_Calibration_Distance_logged_disc
